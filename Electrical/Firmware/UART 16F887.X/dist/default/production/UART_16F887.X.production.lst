

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sun Nov 17 14:08:00 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     	FNCALL	_main,_UART_Init
   400                           	FNCALL	_main,_UART_Write_Text
   401                           	FNCALL	_UART_Write_Text,_UART_Write
   402                           	FNCALL	_UART_Init,___aldiv
   403                           	FNROOT	_main
   404                           	FNCALL	intlevel1,_ISR
   405                           	global	intlevel1
   406                           	FNROOT	intlevel1
   407                           	global	_RCREG
   408                           _RCREG	set	0x1A
   409  001A                     	global	_PORTD
   410                           _PORTD	set	0x8
   411  0008                     	global	_TXREG
   412                           _TXREG	set	0x19
   413  0019                     	global	_INTCON
   414                           _INTCON	set	0xB
   415  000B                     	global	_CREN
   416                           _CREN	set	0xC4
   417  00C4                     	global	_SPEN
   418                           _SPEN	set	0xC7
   419  00C7                     	global	_TRISD
   420                           _TRISD	set	0x88
   421  0088                     	global	_OSCCON
   422                           _OSCCON	set	0x8F
   423  008F                     	global	_PIE1
   424                           _PIE1	set	0x8C
   425  008C                     	global	_SPBRG
   426                           _SPBRG	set	0x99
   427  0099                     	global	_TRMT
   428                           _TRMT	set	0x4C1
   429  04C1                     	global	_TXEN
   430                           _TXEN	set	0x4C5
   431  04C5                     	global	_SYNC
   432                           _SYNC	set	0x4C4
   433  04C4                     	global	_BRGH
   434                           _BRGH	set	0x4C2
   435  04C2                     psect	strings,class=STRING,delta=2,noexec
   436                           global __pstrings
   437                           __pstrings:
   438  0217                     stringtab:
   439  0217                     	global    __stringtab
   440                           __stringtab:
   441  0217                     ;	String table - string pointers are 1 byte each
   442                           stringcode:stringdir:
   443  0217                     movlw high(stringdir)
      + 0217                     stringdir:	
   444  0217  3002               movwf pclath
   445  0218  008A               movf fsr,w
   446  0219  0804               incf fsr
   447  021A  0A84               	addwf pc
   448  021B  0782               	global __stringbase
   449                           __stringbase:
   450  021C                     	retlw	0
   451  021C  3400               psect	strings
   452                           	global    __end_of__stringtab
   453                           __end_of__stringtab:
   454  021D                     	
   455                           STR_1:	
   456  021D                     	retlw	87	;'W'
   457  021D  3457               	retlw	104	;'h'
   458  021E  3468               	retlw	121	;'y'
   459  021F  3479               	retlw	32	;' '
   460  0220  3420               	retlw	104	;'h'
   461  0221  3468               	retlw	101	;'e'
   462  0222  3465               	retlw	108	;'l'
   463  0223  346C               	retlw	108	;'l'
   464  0224  346C               	retlw	111	;'o'
   465  0225  346F               	retlw	32	;' '
   466  0226  3420               	retlw	116	;'t'
   467  0227  3474               	retlw	104	;'h'
   468  0228  3468               	retlw	101	;'e'
   469  0229  3465               	retlw	114	;'r'
   470  022A  3472               	retlw	101	;'e'
   471  022B  3465               	retlw	13
   472  022C  340D               	retlw	10
   473  022D  340A               	retlw	0
   474  022E  3400               psect	strings
   475                           	
   476                           STR_2:	
   477  022F                     	retlw	65	;'A'
   478  022F  3441               	retlw	121	;'y'
   479  0230  3479               	retlw	121	;'y'
   480  0231  3479               	retlw	32	;' '
   481  0232  3420               	retlw	76	;'L'
   482  0233  344C               	retlw	109	;'m'
   483  0234  346D               	retlw	97	;'a'
   484  0235  3461               	retlw	111	;'o'
   485  0236  346F               	retlw	13
   486  0237  340D               	retlw	10
   487  0238  340A               	retlw	0
   488  0239  3400               psect	strings
   489                           ; #config settings
   490                           global __CFG_FOSC$INTRC_NOCLKOUT
   491                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   492  0000                     global __CFG_WDTE$OFF
   493                           __CFG_WDTE$OFF equ 0x0
   494  0000                     global __CFG_MCLRE$OFF
   495                           __CFG_MCLRE$OFF equ 0x0
   496  0000                     global __CFG_LVP$OFF
   497                           __CFG_LVP$OFF equ 0x0
   498  0000                     	file	"C:\Users\flyhi\AppData\Local\Temp\s73g."
   499                           	line	#
   500                           psect cinit,class=CODE,delta=2
   501                           global start_initialization
   502                           start_initialization:
   503  000F                     
   504                           global __initialization
   505                           __initialization:
   506  000F                     psect cinit,class=CODE,delta=2,merge=1
   507                           global end_of_initialization,__end_of__initialization
   508                           
   509                           ;End of C runtime variable initialization code
   510                           
   511                           end_of_initialization:
   512  000F                     __end_of__initialization:
   513  000F                     clrf status
   514  000F  0183               ljmp _main	;jump to C main() function
   515  0010  120A  118A  29A8   psect	cstackCOMMON,class=COMMON,space=1,noexec
   516                           global __pcstackCOMMON
   517                           __pcstackCOMMON:
   518  0070                     ?_UART_Write:	; 1 bytes @ 0x0
   519  0070                     ?_UART_Write_Text:	; 1 bytes @ 0x0
   520  0070                     ?_ISR:	; 1 bytes @ 0x0
   521  0070                     ??_ISR:	; 1 bytes @ 0x0
   522  0070                     	ds	2
   523  0070                     ??_UART_Write:	; 1 bytes @ 0x2
   524  0072                     	global	?___aldiv
   525                           ?___aldiv:	; 4 bytes @ 0x2
   526  0072                     	global	UART_Write@data
   527                           UART_Write@data:	; 1 bytes @ 0x2
   528  0072                     	global	___aldiv@divisor
   529                           ___aldiv@divisor:	; 4 bytes @ 0x2
   530  0072                     	ds	1
   531  0072                     ??_UART_Write_Text:	; 1 bytes @ 0x3
   532  0073                     	global	UART_Write_Text@i
   533                           UART_Write_Text@i:	; 2 bytes @ 0x3
   534  0073                     	ds	2
   535  0073                     	global	UART_Write_Text@text
   536                           UART_Write_Text@text:	; 1 bytes @ 0x5
   537  0075                     	ds	1
   538  0075                     	global	___aldiv@dividend
   539                           ___aldiv@dividend:	; 4 bytes @ 0x6
   540  0076                     	ds	4
   541  0076                     ??___aldiv:	; 1 bytes @ 0xA
   542  007A                     	ds	1
   543  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   544                           global __pcstackBANK0
   545                           __pcstackBANK0:
   546  0020                     	global	___aldiv@counter
   547                           ___aldiv@counter:	; 1 bytes @ 0x0
   548  0020                     	ds	1
   549  0020                     	global	___aldiv@sign
   550                           ___aldiv@sign:	; 1 bytes @ 0x1
   551  0021                     	ds	1
   552  0021                     	global	___aldiv@quotient
   553                           ___aldiv@quotient:	; 4 bytes @ 0x2
   554  0022                     	ds	4
   555  0022                     ?_UART_Init:	; 1 bytes @ 0x6
   556  0026                     	global	UART_Init@baudrate
   557                           UART_Init@baudrate:	; 4 bytes @ 0x6
   558  0026                     	ds	4
   559  0026                     ??_UART_Init:	; 1 bytes @ 0xA
   560  002A                     	ds	12
   561  002A                     	global	UART_Init@x
   562                           UART_Init@x:	; 2 bytes @ 0x16
   563  0036                     	ds	2
   564  0036                     ?_main:	; 2 bytes @ 0x18
   565  0038                     main@argc:	; 2 bytes @ 0x18
   566  0038                     	ds	2
   567  0038                     main@argv:	; 2 bytes @ 0x1A
   568  003A                     	ds	2
   569  003A                     ??_main:	; 1 bytes @ 0x1C
   570  003C                     	ds	3
   571  003C                     ;!
   572                           ;!Data Sizes:
   573                           ;!    Strings     29
   574                           ;!    Constant    0
   575                           ;!    Data        0
   576                           ;!    BSS         0
   577                           ;!    Persistent  0
   578                           ;!    Stack       0
   579                           ;!
   580                           ;!Auto Spaces:
   581                           ;!    Space          Size  Autos    Used
   582                           ;!    COMMON           14     11      11
   583                           ;!    BANK0            80     31      31
   584                           ;!    BANK1            80      0       0
   585                           ;!    BANK3            96      0       0
   586                           ;!    BANK2            96      0       0
   587                           
   588                           ;!
   589                           ;!Pointer List with Targets:
   590                           ;!
   591                           ;!    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 18
   592                           ;!		 -> STR_2(CODE[11]), STR_1(CODE[18]), 
   593                           ;!
   594                           
   595                           
   596                           ;!
   597                           ;!Critical Paths under _main in COMMON
   598                           ;!
   599                           ;!    _UART_Write_Text->_UART_Write
   600                           ;!    _UART_Init->___aldiv
   601                           ;!
   602                           ;!Critical Paths under _ISR in COMMON
   603                           ;!
   604                           ;!    None.
   605                           ;!
   606                           ;!Critical Paths under _main in BANK0
   607                           ;!
   608                           ;!    _main->_UART_Init
   609                           ;!    _UART_Init->___aldiv
   610                           ;!
   611                           ;!Critical Paths under _ISR in BANK0
   612                           ;!
   613                           ;!    None.
   614                           ;!
   615                           ;!Critical Paths under _main in BANK1
   616                           ;!
   617                           ;!    None.
   618                           ;!
   619                           ;!Critical Paths under _ISR in BANK1
   620                           ;!
   621                           ;!    None.
   622                           ;!
   623                           ;!Critical Paths under _main in BANK3
   624                           ;!
   625                           ;!    None.
   626                           ;!
   627                           ;!Critical Paths under _ISR in BANK3
   628                           ;!
   629                           ;!    None.
   630                           ;!
   631                           ;!Critical Paths under _main in BANK2
   632                           ;!
   633                           ;!    None.
   634                           ;!
   635                           ;!Critical Paths under _ISR in BANK2
   636                           ;!
   637                           ;!    None.
   638                           
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   641 ;;
   642                           
   643                           ;!
   644                           ;!Call Graph Tables:
   645                           ;!
   646                           ;! ---------------------------------------------------------------------------------
   647                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   648                           ;! ---------------------------------------------------------------------------------
   649                           ;! (0) _main                                                 7     3      4    1007
   650                           ;!                                             24 BANK0      7     3      4
   651                           ;!                          _UART_Init
   652                           ;!                    _UART_Write_Text
   653                           ;! ---------------------------------------------------------------------------------
   654                           ;! (1) _UART_Write_Text                                      3     3      0     171
   655                           ;!                                              3 COMMON     3     3      0
   656                           ;!                         _UART_Write
   657                           ;! ---------------------------------------------------------------------------------
   658                           ;! (2) _UART_Write                                           1     1      0      15
   659                           ;!                                              2 COMMON     1     1      0
   660                           ;! ---------------------------------------------------------------------------------
   661                           ;! (1) _UART_Init                                           18    14      4     836
   662                           ;!                                              6 BANK0     18    14      4
   663                           ;!                            ___aldiv
   664                           ;! ---------------------------------------------------------------------------------
   665                           ;! (2) ___aldiv                                             15     7      8     604
   666                           ;!                                              2 COMMON     9     1      8
   667                           ;!                                              0 BANK0      6     6      0
   668                           ;! ---------------------------------------------------------------------------------
   669                           ;! Estimated maximum stack depth 2
   670                           ;! ---------------------------------------------------------------------------------
   671                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   672                           ;! ---------------------------------------------------------------------------------
   673                           ;! (3) _ISR                                                  2     2      0       0
   674                           ;!                                              0 COMMON     2     2      0
   675                           ;! ---------------------------------------------------------------------------------
   676                           ;! Estimated maximum stack depth 3
   677                           ;! ---------------------------------------------------------------------------------
   678                           ;!
   679                           ;! Call Graph Graphs:
   680                           ;!
   681                           ;! _main (ROOT)
   682                           ;!   _UART_Init
   683                           ;!     ___aldiv
   684                           ;!   _UART_Write_Text
   685                           ;!     _UART_Write
   686                           ;!
   687                           ;! _ISR (ROOT)
   688                           ;!
   689                           
   690                           ;! Address spaces:
   691                           
   692                           ;!Name               Size   Autos  Total    Cost      Usage
   693                           ;!BITCOMMON            E      0       0       0        0.0%
   694                           ;!EEDATA             100      0       0       0        0.0%
   695                           ;!NULL                 0      0       0       0        0.0%
   696                           ;!CODE                 0      0       0       0        0.0%
   697                           ;!COMMON               E      B       B       1       78.6%
   698                           ;!BITSFR0              0      0       0       1        0.0%
   699                           ;!SFR0                 0      0       0       1        0.0%
   700                           ;!BITSFR1              0      0       0       2        0.0%
   701                           ;!SFR1                 0      0       0       2        0.0%
   702                           ;!STACK                0      0       0       2        0.0%
   703                           ;!ABS                  0      0       0       3        0.0%
   704                           ;!BITBANK0            50      0       0       4        0.0%
   705                           ;!BITSFR3              0      0       0       4        0.0%
   706                           ;!SFR3                 0      0       0       4        0.0%
   707                           ;!BANK0               50     1F      1F       5       38.8%
   708                           ;!BITSFR2              0      0       0       5        0.0%
   709                           ;!SFR2                 0      0       0       5        0.0%
   710                           ;!BITBANK1            50      0       0       6        0.0%
   711                           ;!BANK1               50      0       0       7        0.0%
   712                           ;!BITBANK3            60      0       0       8        0.0%
   713                           ;!BANK3               60      0       0       9        0.0%
   714                           ;!BITBANK2            60      0       0      10        0.0%
   715                           ;!BANK2               60      0       0      11        0.0%
   716                           ;!DATA                 0      0       0      12        0.0%
   717                           
   718                           	global	_main
   719                           
   720 ;; *************** function _main *****************
   721 ;; Defined at:
   722 ;;		line 64 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  argc            2   24[BANK0 ] int 
   725 ;;  argv            2   26[BANK0 ] PTR PTR unsigned char 
   726 ;; Auto vars:     Size  Location     Type
   727 ;;		None
   728 ;; Return value:  Size  Location     Type
   729 ;;                  2   24[BANK0 ] int 
   730 ;; Registers used:
   731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   732 ;; Tracked objects:
   733 ;;		On entry : B00/0
   734 ;;		On exit  : 0/0
   735 ;;		Unchanged: 0/0
   736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   737 ;;      Params:         0       4       0       0       0
   738 ;;      Locals:         0       0       0       0       0
   739 ;;      Temps:          0       3       0       0       0
   740 ;;      Totals:         0       7       0       0       0
   741 ;;Total ram usage:        7 bytes
   742 ;; Hardware stack levels required when called:    3
   743 ;; This function calls:
   744 ;;		_UART_Init
   745 ;;		_UART_Write_Text
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   751                           	file	"main.c"
   752                           	line	64
   753                           global __pmaintext
   754                           __pmaintext:	;psect for function _main
   755  01A8                     psect	maintext
   756                           	file	"main.c"
   757                           	line	64
   758                           	global	__size_of_main
   759                           	__size_of_main	equ	__end_of_main-_main
   760  0048                     	
   761                           _main:	
   762  01A8                     ;incstack = 0
   763                           	opt	stack 5
   764                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   765                           	line	68
   766                           	
   767                           l807:	
   768  01A8                     ;main.c: 68:         UART_Write_Text("Ayy Lmao\r\n");
   769                           	bsf	status, 5	;RP0=1, select bank1
   770  01A8  1683               	bcf	status, 6	;RP1=0, select bank1
   771  01A9  1303               	bsf	(143)^080h+(6/8),(6)&7	;volatile
   772  01AA  170F               	line	69
   773                           ;main.c: 69:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   774                           	bsf	(143)^080h+(5/8),(5)&7	;volatile
   775  01AB  168F               	line	70
   776                           ;main.c: 70:     }
   777                           	bsf	(143)^080h+(4/8),(4)&7	;volatile
   778  01AC  160F               	line	72
   779                           	
   780                           l809:	
   781  01AD                     ;main.c: 72: }
   782                           	movlw	0
   783  01AD  3000               	bcf	status, 5	;RP0=0, select bank0
   784  01AE  1283               	bcf	status, 6	;RP1=0, select bank0
   785  01AF  1303               	movwf	(UART_Init@baudrate+3)
   786  01B0  00A9               	movlw	0
   787  01B1  3000               	movwf	(UART_Init@baudrate+2)
   788  01B2  00A8               	movlw	025h
   789  01B3  3025               	movwf	(UART_Init@baudrate+1)
   790  01B4  00A7               	movlw	080h
   791  01B5  3080               	movwf	(UART_Init@baudrate)
   792  01B6  00A6               
   793                           	fcall	_UART_Init
   794  01B7  120A  118A  2013  120A  118A  	line	73
   795                           	
   796                           l811:	
   797  01BC                     	bsf	status, 5	;RP0=1, select bank1
   798  01BC  1683               	bcf	status, 6	;RP1=0, select bank1
   799  01BD  1303               	clrf	(136)^080h	;volatile
   800  01BE  0188               	line	77
   801                           	
   802                           l813:	
   803  01BF                     	bcf	status, 5	;RP0=0, select bank0
   804  01BF  1283               	bcf	status, 6	;RP1=0, select bank0
   805  01C0  1303               	clrf	(8)	;volatile
   806  01C1  0188               	goto	l815
   807  01C2  29C3               	line	79
   808                           	
   809                           l57:	
   810  01C3                     	line	80
   811                           	
   812                           l815:	
   813  01C3                     	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
   814  01C3  3001               	fcall	_UART_Write_Text
   815  01C4  120A  118A  21F0  120A  118A  	line	81
   816                           	
   817                           l817:	
   818  01C9                     	opt asmopt_push
   819                           opt asmopt_off
   820                           movlw  11
   821  01C9  300B               	bcf	status, 5	;RP0=0, select bank0
   822  01CA  1283               	bcf	status, 6	;RP1=0, select bank0
   823  01CB  1303               movwf	((??_main+0)+0+2),f
   824  01CC  00BE               movlw	38
   825  01CD  3026               movwf	((??_main+0)+0+1),f
   826  01CE  00BD               	movlw	93
   827  01CF  305D               movwf	((??_main+0)+0),f
   828  01D0  00BC               	u407:
   829  01D1                     decfsz	((??_main+0)+0),f
   830  01D1  0BBC               	goto	u407
   831  01D2  29D1               	decfsz	((??_main+0)+0+1),f
   832  01D3  0BBD               	goto	u407
   833  01D4  29D1               	decfsz	((??_main+0)+0+2),f
   834  01D5  0BBE               	goto	u407
   835  01D6  29D1               opt asmopt_pop
   836                           
   837                           	line	82
   838                           	
   839                           l819:	
   840  01D7                     	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
   841  01D7  3013               	fcall	_UART_Write_Text
   842  01D8  120A  118A  21F0  120A  118A  	line	83
   843                           	
   844                           l821:	
   845  01DD                     	opt asmopt_push
   846                           opt asmopt_off
   847                           movlw  11
   848  01DD  300B               	bcf	status, 5	;RP0=0, select bank0
   849  01DE  1283               	bcf	status, 6	;RP1=0, select bank0
   850  01DF  1303               movwf	((??_main+0)+0+2),f
   851  01E0  00BE               movlw	38
   852  01E1  3026               movwf	((??_main+0)+0+1),f
   853  01E2  00BD               	movlw	93
   854  01E3  305D               movwf	((??_main+0)+0),f
   855  01E4  00BC               	u417:
   856  01E5                     decfsz	((??_main+0)+0),f
   857  01E5  0BBC               	goto	u417
   858  01E6  29E5               	decfsz	((??_main+0)+0+1),f
   859  01E7  0BBD               	goto	u417
   860  01E8  29E5               	decfsz	((??_main+0)+0+2),f
   861  01E9  0BBE               	goto	u417
   862  01EA  29E5               opt asmopt_pop
   863                           
   864                           	goto	l815
   865  01EB  29C3               	line	84
   866                           	
   867                           l58:	
   868  01EC                     	goto	l815
   869  01EC  29C3               	
   870                           l59:	
   871  01ED                     	line	86
   872                           ;	Return value of _main is never used
   873                           	
   874                           l60:	
   875  01ED                     	global	start
   876                           	ljmp	start
   877  01ED  120A  118A  280C   	opt stack 0
   878                           GLOBAL	__end_of_main
   879                           	__end_of_main:
   880  01F0                     	signat	_main,8314
   881                           	global	_UART_Write_Text
   882                           
   883 ;; *************** function _UART_Write_Text *****************
   884 ;; Defined at:
   885 ;;		line 52 in file "main.c"
   886 ;; Parameters:    Size  Location     Type
   887 ;;  text            1    wreg     PTR unsigned char 
   888 ;;		 -> STR_2(11), STR_1(18), 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  text            1    5[COMMON] PTR unsigned char 
   891 ;;		 -> STR_2(11), STR_1(18), 
   892 ;;  i               2    3[COMMON] int 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  1    wreg      void 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   902 ;;      Params:         0       0       0       0       0
   903 ;;      Locals:         3       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0
   905 ;;      Totals:         3       0       0       0       0
   906 ;;Total ram usage:        3 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; Hardware stack levels required when called:    2
   909 ;; This function calls:
   910 ;;		_UART_Write
   911 ;; This function is called by:
   912 ;;		_main
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   916                           	line	52
   917                           global __ptext1
   918                           __ptext1:	;psect for function _UART_Write_Text
   919  01F0                     psect	text1
   920                           	file	"main.c"
   921                           	line	52
   922                           	global	__size_of_UART_Write_Text
   923                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
   924  0027                     	
   925                           _UART_Write_Text:	
   926  01F0                     ;incstack = 0
   927                           	opt	stack 5
   928                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   929                           ;UART_Write_Text@text stored from wreg
   930                           	movwf	(UART_Write_Text@text)
   931  01F0  00F5               	line	55
   932                           	
   933                           l799:	
   934  01F1                     ;main.c: 52: ;main.c: 53: ;main.c: 54:     OSCCON |= 1ULL << 6;;main.c: 55:     OSCCON |
                                 = 1ULL << 5;
   935                           	clrf	(UART_Write_Text@i)
   936  01F1  01F3               	clrf	(UART_Write_Text@i+1)
   937  01F2  01F4               	goto	l805
   938  01F3  2A08               	
   939                           l45:	
   940  01F4                     	line	56
   941                           	
   942                           l801:	
   943  01F4                     ;main.c: 56:     OSCCON |= 1ULL << 4;
   944                           	movf	(UART_Write_Text@i),w
   945  01F4  0873               	addwf	(UART_Write_Text@text),w
   946  01F5  0775               	movwf	fsr0
   947  01F6  0084               	fcall	stringdir
   948  01F7  120A  118A  2217  120A  118A  	fcall	_UART_Write
   949  01FC  120A  118A  223A  120A  118A  	
   950                           l803:	
   951  0201                     	movlw	01h
   952  0201  3001               	addwf	(UART_Write_Text@i),f
   953  0202  07F3               	skipnc
   954  0203  1803               	incf	(UART_Write_Text@i+1),f
   955  0204  0AF4               	movlw	0
   956  0205  3000               	addwf	(UART_Write_Text@i+1),f
   957  0206  07F4               	goto	l805
   958  0207  2A08               	
   959                           l44:	
   960  0208                     	
   961                           l805:	
   962  0208                     	movf	(UART_Write_Text@i),w
   963  0208  0873               	addwf	(UART_Write_Text@text),w
   964  0209  0775               	movwf	fsr0
   965  020A  0084               	fcall	stringdir
   966  020B  120A  118A  2217  120A  118A  	xorlw	0
   967  0210  3A00               	skipz
   968  0211  1D03               	goto	u391
   969  0212  2A14               	goto	u390
   970  0213  2A15               u391:
   971  0214                     	goto	l801
   972  0214  29F4               u390:
   973  0215                     	goto	l47
   974  0215  2A16               	
   975                           l46:	
   976  0216                     	line	57
   977                           	
   978                           l47:	
   979  0216                     	return
   980  0216  0008               	opt stack 0
   981                           GLOBAL	__end_of_UART_Write_Text
   982                           	__end_of_UART_Write_Text:
   983  0217                     	signat	_UART_Write_Text,4217
   984                           	global	_UART_Write
   985                           
   986 ;; *************** function _UART_Write *****************
   987 ;; Defined at:
   988 ;;		line 40 in file "main.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  data            1    wreg     unsigned char 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  data            1    2[COMMON] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       0       0       0       0
  1003 ;;      Locals:         1       0       0       0       0
  1004 ;;      Temps:          0       0       0       0       0
  1005 ;;      Totals:         1       0       0       0       0
  1006 ;;Total ram usage:        1 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    1
  1009 ;; This function calls:
  1010 ;;		Nothing
  1011 ;; This function is called by:
  1012 ;;		_UART_Write_Text
  1013 ;; This function uses a non-reentrant model
  1014 ;;
  1015                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1016                           	line	40
  1017                           global __ptext2
  1018                           __ptext2:	;psect for function _UART_Write
  1019  023A                     psect	text2
  1020                           	file	"main.c"
  1021                           	line	40
  1022                           	global	__size_of_UART_Write
  1023                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
  1024  000E                     	
  1025                           _UART_Write:	
  1026  023A                     ;incstack = 0
  1027                           	opt	stack 5
  1028                           ; Regs used in _UART_Write: [wreg]
  1029                           ;UART_Write@data stored from wreg
  1030                           	movwf	(UART_Write@data)
  1031  023A  00F2               	line	42
  1032                           	
  1033                           l633:	
  1034  023B                     ;main.c: 40:   int i;;main.c: 41:   for(i=0;text[i]!='\0';i++);main.c: 42:     UART_Writ
                                 e(text[i]);
  1035                           	goto	l38
  1036  023B  2A3C               	
  1037                           l39:	
  1038  023C                     	
  1039                           l38:	
  1040  023C                     	bsf	status, 5	;RP0=1, select bank1
  1041  023C  1683               	bcf	status, 6	;RP1=0, select bank1
  1042  023D  1303               	btfss	(1217/8)^080h,(1217)&7	;volatile
  1043  023E  1C98               	goto	u11
  1044  023F  2A41               	goto	u10
  1045  0240  2A42               u11:
  1046  0241                     	goto	l38
  1047  0241  2A3C               u10:
  1048  0242                     	goto	l635
  1049  0242  2A43               	
  1050                           l40:	
  1051  0243                     	line	43
  1052                           	
  1053                           l635:	
  1054  0243                     ;main.c: 43: }
  1055                           	movf	(UART_Write@data),w
  1056  0243  0872               	bcf	status, 5	;RP0=0, select bank0
  1057  0244  1283               	bcf	status, 6	;RP1=0, select bank0
  1058  0245  1303               	movwf	(25)	;volatile
  1059  0246  0099               	line	44
  1060                           	
  1061                           l41:	
  1062  0247                     	return
  1063  0247  0008               	opt stack 0
  1064                           GLOBAL	__end_of_UART_Write
  1065                           	__end_of_UART_Write:
  1066  0248                     	signat	_UART_Write,4217
  1067                           	global	_UART_Init
  1068                           
  1069 ;; *************** function _UART_Init *****************
  1070 ;; Defined at:
  1071 ;;		line 18 in file "main.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;  baudrate        4    6[BANK0 ] const long 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  x               2   22[BANK0 ] unsigned int 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      unsigned char 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       4       0       0       0
  1086 ;;      Locals:         0       2       0       0       0
  1087 ;;      Temps:          0      12       0       0       0
  1088 ;;      Totals:         0      18       0       0       0
  1089 ;;Total ram usage:       18 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    2
  1092 ;; This function calls:
  1093 ;;		___aldiv
  1094 ;; This function is called by:
  1095 ;;		_main
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1099                           	line	18
  1100                           global __ptext3
  1101                           __ptext3:	;psect for function _UART_Init
  1102  0013                     psect	text3
  1103                           	file	"main.c"
  1104                           	line	18
  1105                           	global	__size_of_UART_Init
  1106                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  1107  00EF                     	
  1108                           _UART_Init:	
  1109  0013                     ;incstack = 0
  1110                           	opt	stack 5
  1111                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1112                           	line	20
  1113                           	
  1114                           l771:	
  1115  0013                     ;main.c: 19:         INTCON |= 1ULL << 7;;main.c: 20:         INTCON |= 1ULL << 6;
  1116                           	bcf	status, 5	;RP0=0, select bank0
  1117  0013  1283               	bcf	status, 6	;RP1=0, select bank0
  1118  0014  1303               	movf	(UART_Init@baudrate),w
  1119  0015  0826               	movwf	(??_UART_Init+0)+0
  1120  0016  00AA               	movf	(UART_Init@baudrate+1),w
  1121  0017  0827               	movwf	((??_UART_Init+0)+0+1)
  1122  0018  00AB               	movf	(UART_Init@baudrate+2),w
  1123  0019  0828               	movwf	((??_UART_Init+0)+0+2)
  1124  001A  00AC               	movf	(UART_Init@baudrate+3),w
  1125  001B  0829               	movwf	((??_UART_Init+0)+0+3)
  1126  001C  00AD               	movlw	06h
  1127  001D  3006               u315:
  1128  001E                     	clrc
  1129  001E  1003               	rlf	(??_UART_Init+0)+0,f
  1130  001F  0DAA               	rlf	(??_UART_Init+0)+1,f
  1131  0020  0DAB               	rlf	(??_UART_Init+0)+2,f
  1132  0021  0DAC               	rlf	(??_UART_Init+0)+3,f
  1133  0022  0DAD               u310:
  1134  0023                     	addlw	-1
  1135  0023  3EFF               	skipz
  1136  0024  1D03               	goto	u315
  1137  0025  281E               	movf	3+(??_UART_Init+0)+0,w
  1138  0026  082D               	movwf	(___aldiv@divisor+3)
  1139  0027  00F5               	movf	2+(??_UART_Init+0)+0,w
  1140  0028  082C               	movwf	(___aldiv@divisor+2)
  1141  0029  00F4               	movf	1+(??_UART_Init+0)+0,w
  1142  002A  082B               	movwf	(___aldiv@divisor+1)
  1143  002B  00F3               	movf	0+(??_UART_Init+0)+0,w
  1144  002C  082A               	movwf	(___aldiv@divisor)
  1145  002D  00F2               
  1146                           	movlw	0
  1147  002E  3000               	movwf	((??_UART_Init+4)+0)
  1148  002F  00AE               	movlw	012h
  1149  0030  3012               	movwf	((??_UART_Init+4)+0+1)
  1150  0031  00AF               	movlw	07Ah
  1151  0032  307A               	movwf	((??_UART_Init+4)+0+2)
  1152  0033  00B0               	movlw	0
  1153  0034  3000               	movwf	((??_UART_Init+4)+0+3)
  1154  0035  00B1               	movf	(UART_Init@baudrate),w
  1155  0036  0826               	movwf	(??_UART_Init+8)+0
  1156  0037  00B2               	movf	(UART_Init@baudrate+1),w
  1157  0038  0827               	movwf	((??_UART_Init+8)+0+1)
  1158  0039  00B3               	movf	(UART_Init@baudrate+2),w
  1159  003A  0828               	movwf	((??_UART_Init+8)+0+2)
  1160  003B  00B4               	movf	(UART_Init@baudrate+3),w
  1161  003C  0829               	movwf	((??_UART_Init+8)+0+3)
  1162  003D  00B5               	movlw	06h
  1163  003E  3006               u325:
  1164  003F                     	clrc
  1165  003F  1003               	rlf	(??_UART_Init+8)+0,f
  1166  0040  0DB2               	rlf	(??_UART_Init+8)+1,f
  1167  0041  0DB3               	rlf	(??_UART_Init+8)+2,f
  1168  0042  0DB4               	rlf	(??_UART_Init+8)+3,f
  1169  0043  0DB5               u320:
  1170  0044                     	addlw	-1
  1171  0044  3EFF               	skipz
  1172  0045  1D03               	goto	u325
  1173  0046  283F               	comf	(??_UART_Init+8)+0,f
  1174  0047  09B2               	comf	(??_UART_Init+8)+1,f
  1175  0048  09B3               	comf	(??_UART_Init+8)+2,f
  1176  0049  09B4               	comf	(??_UART_Init+8)+3,f
  1177  004A  09B5               	incf	(??_UART_Init+8)+0,f
  1178  004B  0AB2               	skipnz
  1179  004C  1903               	incf	(??_UART_Init+8)+1,f
  1180  004D  0AB3               	skipnz
  1181  004E  1903               	incf	(??_UART_Init+8)+2,f
  1182  004F  0AB4               	skipnz
  1183  0050  1903               	incf	(??_UART_Init+8)+3,f
  1184  0051  0AB5               	movf	0+(??_UART_Init+8)+0,w
  1185  0052  0832               	addwf	(??_UART_Init+4)+0,f
  1186  0053  07AE               	movf	1+(??_UART_Init+8)+0,w
  1187  0054  0833               	skipnc
  1188  0055  1803               	incfsz	1+(??_UART_Init+8)+0,w
  1189  0056  0F33               	goto	u330
  1190  0057  2859               	goto	u331
  1191  0058  285A               u330:
  1192  0059                     	addwf	(??_UART_Init+4)+1,f
  1193  0059  07AF               u331:
  1194  005A                     	movf	2+(??_UART_Init+8)+0,w
  1195  005A  0834               	skipnc
  1196  005B  1803               	incfsz	2+(??_UART_Init+8)+0,w
  1197  005C  0F34               	goto	u332
  1198  005D  285F               	goto	u333
  1199  005E  2860               u332:
  1200  005F                     	addwf	(??_UART_Init+4)+2,f
  1201  005F  07B0               u333:
  1202  0060                     	movf	3+(??_UART_Init+8)+0,w
  1203  0060  0835               	skipnc
  1204  0061  1803               	incf	3+(??_UART_Init+8)+0,w
  1205  0062  0A35               	addwf	(??_UART_Init+4)+3,f
  1206  0063  07B1               	movf	3+(??_UART_Init+4)+0,w
  1207  0064  0831               	movwf	(___aldiv@dividend+3)
  1208  0065  00F9               	movf	2+(??_UART_Init+4)+0,w
  1209  0066  0830               	movwf	(___aldiv@dividend+2)
  1210  0067  00F8               	movf	1+(??_UART_Init+4)+0,w
  1211  0068  082F               	movwf	(___aldiv@dividend+1)
  1212  0069  00F7               	movf	0+(??_UART_Init+4)+0,w
  1213  006A  082E               	movwf	(___aldiv@dividend)
  1214  006B  00F6               
  1215                           	fcall	___aldiv
  1216  006C  120A  118A  2102  120A  118A  	movf	(1+(?___aldiv)),w
  1217  0071  0873               	bcf	status, 5	;RP0=0, select bank0
  1218  0072  1283               	bcf	status, 6	;RP1=0, select bank0
  1219  0073  1303               	movwf	(UART_Init@x+1)
  1220  0074  00B7               	movf	(0+(?___aldiv)),w
  1221  0075  0872               	movwf	(UART_Init@x)
  1222  0076  00B6               	line	21
  1223                           	
  1224                           l773:	
  1225  0077                     ;main.c: 21:         return 1;
  1226                           	movlw	01h
  1227  0077  3001               	subwf	(UART_Init@x+1),w
  1228  0078  0237               	movlw	0
  1229  0079  3000               	skipnz
  1230  007A  1903               	subwf	(UART_Init@x),w
  1231  007B  0236               	skipc
  1232  007C  1C03               	goto	u341
  1233  007D  287F               	goto	u340
  1234  007E  2880               u341:
  1235  007F                     	goto	l779
  1236  007F  28E6               u340:
  1237  0080                     	line	22
  1238                           	
  1239                           l775:	
  1240  0080                     ;main.c: 22:     }
  1241                           	movf	(UART_Init@baudrate),w
  1242  0080  0826               	movwf	(??_UART_Init+0)+0
  1243  0081  00AA               	movf	(UART_Init@baudrate+1),w
  1244  0082  0827               	movwf	((??_UART_Init+0)+0+1)
  1245  0083  00AB               	movf	(UART_Init@baudrate+2),w
  1246  0084  0828               	movwf	((??_UART_Init+0)+0+2)
  1247  0085  00AC               	movf	(UART_Init@baudrate+3),w
  1248  0086  0829               	movwf	((??_UART_Init+0)+0+3)
  1249  0087  00AD               	movlw	04h
  1250  0088  3004               u355:
  1251  0089                     	clrc
  1252  0089  1003               	rlf	(??_UART_Init+0)+0,f
  1253  008A  0DAA               	rlf	(??_UART_Init+0)+1,f
  1254  008B  0DAB               	rlf	(??_UART_Init+0)+2,f
  1255  008C  0DAC               	rlf	(??_UART_Init+0)+3,f
  1256  008D  0DAD               u350:
  1257  008E                     	addlw	-1
  1258  008E  3EFF               	skipz
  1259  008F  1D03               	goto	u355
  1260  0090  2889               	movf	3+(??_UART_Init+0)+0,w
  1261  0091  082D               	movwf	(___aldiv@divisor+3)
  1262  0092  00F5               	movf	2+(??_UART_Init+0)+0,w
  1263  0093  082C               	movwf	(___aldiv@divisor+2)
  1264  0094  00F4               	movf	1+(??_UART_Init+0)+0,w
  1265  0095  082B               	movwf	(___aldiv@divisor+1)
  1266  0096  00F3               	movf	0+(??_UART_Init+0)+0,w
  1267  0097  082A               	movwf	(___aldiv@divisor)
  1268  0098  00F2               
  1269                           	movlw	0
  1270  0099  3000               	movwf	((??_UART_Init+4)+0)
  1271  009A  00AE               	movlw	012h
  1272  009B  3012               	movwf	((??_UART_Init+4)+0+1)
  1273  009C  00AF               	movlw	07Ah
  1274  009D  307A               	movwf	((??_UART_Init+4)+0+2)
  1275  009E  00B0               	movlw	0
  1276  009F  3000               	movwf	((??_UART_Init+4)+0+3)
  1277  00A0  00B1               	movf	(UART_Init@baudrate),w
  1278  00A1  0826               	movwf	(??_UART_Init+8)+0
  1279  00A2  00B2               	movf	(UART_Init@baudrate+1),w
  1280  00A3  0827               	movwf	((??_UART_Init+8)+0+1)
  1281  00A4  00B3               	movf	(UART_Init@baudrate+2),w
  1282  00A5  0828               	movwf	((??_UART_Init+8)+0+2)
  1283  00A6  00B4               	movf	(UART_Init@baudrate+3),w
  1284  00A7  0829               	movwf	((??_UART_Init+8)+0+3)
  1285  00A8  00B5               	movlw	04h
  1286  00A9  3004               u365:
  1287  00AA                     	clrc
  1288  00AA  1003               	rlf	(??_UART_Init+8)+0,f
  1289  00AB  0DB2               	rlf	(??_UART_Init+8)+1,f
  1290  00AC  0DB3               	rlf	(??_UART_Init+8)+2,f
  1291  00AD  0DB4               	rlf	(??_UART_Init+8)+3,f
  1292  00AE  0DB5               u360:
  1293  00AF                     	addlw	-1
  1294  00AF  3EFF               	skipz
  1295  00B0  1D03               	goto	u365
  1296  00B1  28AA               	comf	(??_UART_Init+8)+0,f
  1297  00B2  09B2               	comf	(??_UART_Init+8)+1,f
  1298  00B3  09B3               	comf	(??_UART_Init+8)+2,f
  1299  00B4  09B4               	comf	(??_UART_Init+8)+3,f
  1300  00B5  09B5               	incf	(??_UART_Init+8)+0,f
  1301  00B6  0AB2               	skipnz
  1302  00B7  1903               	incf	(??_UART_Init+8)+1,f
  1303  00B8  0AB3               	skipnz
  1304  00B9  1903               	incf	(??_UART_Init+8)+2,f
  1305  00BA  0AB4               	skipnz
  1306  00BB  1903               	incf	(??_UART_Init+8)+3,f
  1307  00BC  0AB5               	movf	0+(??_UART_Init+8)+0,w
  1308  00BD  0832               	addwf	(??_UART_Init+4)+0,f
  1309  00BE  07AE               	movf	1+(??_UART_Init+8)+0,w
  1310  00BF  0833               	skipnc
  1311  00C0  1803               	incfsz	1+(??_UART_Init+8)+0,w
  1312  00C1  0F33               	goto	u370
  1313  00C2  28C4               	goto	u371
  1314  00C3  28C5               u370:
  1315  00C4                     	addwf	(??_UART_Init+4)+1,f
  1316  00C4  07AF               u371:
  1317  00C5                     	movf	2+(??_UART_Init+8)+0,w
  1318  00C5  0834               	skipnc
  1319  00C6  1803               	incfsz	2+(??_UART_Init+8)+0,w
  1320  00C7  0F34               	goto	u372
  1321  00C8  28CA               	goto	u373
  1322  00C9  28CB               u372:
  1323  00CA                     	addwf	(??_UART_Init+4)+2,f
  1324  00CA  07B0               u373:
  1325  00CB                     	movf	3+(??_UART_Init+8)+0,w
  1326  00CB  0835               	skipnc
  1327  00CC  1803               	incf	3+(??_UART_Init+8)+0,w
  1328  00CD  0A35               	addwf	(??_UART_Init+4)+3,f
  1329  00CE  07B1               	movf	3+(??_UART_Init+4)+0,w
  1330  00CF  0831               	movwf	(___aldiv@dividend+3)
  1331  00D0  00F9               	movf	2+(??_UART_Init+4)+0,w
  1332  00D1  0830               	movwf	(___aldiv@dividend+2)
  1333  00D2  00F8               	movf	1+(??_UART_Init+4)+0,w
  1334  00D3  082F               	movwf	(___aldiv@dividend+1)
  1335  00D4  00F7               	movf	0+(??_UART_Init+4)+0,w
  1336  00D5  082E               	movwf	(___aldiv@dividend)
  1337  00D6  00F6               
  1338                           	fcall	___aldiv
  1339  00D7  120A  118A  2102  120A  118A  	movf	(1+(?___aldiv)),w
  1340  00DC  0873               	bcf	status, 5	;RP0=0, select bank0
  1341  00DD  1283               	bcf	status, 6	;RP1=0, select bank0
  1342  00DE  1303               	movwf	(UART_Init@x+1)
  1343  00DF  00B7               	movf	(0+(?___aldiv)),w
  1344  00E0  0872               	movwf	(UART_Init@x)
  1345  00E1  00B6               	line	23
  1346                           	
  1347                           l777:	
  1348  00E2                     ;main.c: 23:     return 0;
  1349                           	bsf	status, 5	;RP0=1, select bank1
  1350  00E2  1683               	bcf	status, 6	;RP1=0, select bank1
  1351  00E3  1303               	bsf	(1218/8)^080h,(1218)&7	;volatile
  1352  00E4  1518               	goto	l779
  1353  00E5  28E6               	line	24
  1354                           ;main.c: 24: }
  1355                           	
  1356                           l33:	
  1357  00E6                     	line	26
  1358                           	
  1359                           l779:	
  1360  00E6                     ;main.c: 26: void UART_Write(char data)
  1361                           	movlw	01h
  1362  00E6  3001               	bcf	status, 5	;RP0=0, select bank0
  1363  00E7  1283               	subwf	(UART_Init@x+1),w
  1364  00E8  0237               	movlw	0
  1365  00E9  3000               	skipnz
  1366  00EA  1903               	subwf	(UART_Init@x),w
  1367  00EB  0236               	skipnc
  1368  00EC  1803               	goto	u381
  1369  00ED  28EF               	goto	u380
  1370  00EE  28F0               u381:
  1371  00EF                     	goto	l35
  1372  00EF  2901               u380:
  1373  00F0                     	line	27
  1374                           	
  1375                           l781:	
  1376  00F0                     ;main.c: 27: {
  1377                           	movf	(UART_Init@x),w
  1378  00F0  0836               	bsf	status, 5	;RP0=1, select bank1
  1379  00F1  1683               	bcf	status, 6	;RP1=0, select bank1
  1380  00F2  1303               	movwf	(153)^080h	;volatile
  1381  00F3  0099               	line	28
  1382                           	
  1383                           l783:	
  1384  00F4                     ;main.c: 28:   while(!TRMT);
  1385                           	bcf	(1220/8)^080h,(1220)&7	;volatile
  1386  00F4  1218               	line	29
  1387                           	
  1388                           l785:	
  1389  00F5                     ;main.c: 29:   TXREG = data;
  1390                           	bcf	status, 5	;RP0=0, select bank0
  1391  00F5  1283               	bcf	status, 6	;RP1=0, select bank0
  1392  00F6  1303               	bsf	(199/8),(199)&7	;volatile
  1393  00F7  1798               	line	30
  1394                           	
  1395                           l787:	
  1396  00F8                     ;main.c: 30: }
  1397                           	bsf	(196/8),(196)&7	;volatile
  1398  00F8  1618               	line	31
  1399                           	
  1400                           l789:	
  1401  00F9                     ;main.c: 31: 
  1402                           	bsf	status, 5	;RP0=1, select bank1
  1403  00F9  1683               	bcf	status, 6	;RP1=0, select bank1
  1404  00FA  1303               	bsf	(1221/8)^080h,(1221)&7	;volatile
  1405  00FB  1698               	line	32
  1406                           	
  1407                           l791:	
  1408  00FC                     ;main.c: 32: 
  1409                           	bsf	(140)^080h+(5/8),(5)&7	;volatile
  1410  00FC  168C               	line	33
  1411                           	
  1412                           l793:	
  1413  00FD                     ;main.c: 33: 
  1414                           	bsf	(11)+(7/8),(7)&7	;volatile
  1415  00FD  178B               	line	34
  1416                           	
  1417                           l795:	
  1418  00FE                     ;main.c: 34: 
  1419                           	bsf	(11)+(6/8),(6)&7	;volatile
  1420  00FE  170B               	goto	l35
  1421  00FF  2901               	line	35
  1422                           	
  1423                           l797:	
  1424  0100                     ;main.c: 35: ;	Return value of _UART_Init is never used
  1425                           	goto	l35
  1426  0100  2901               	line	36
  1427                           ;main.c: 36: 
  1428                           	
  1429                           l34:	
  1430  0101                     	line	38
  1431                           ;main.c: 37: ;	Return value of _UART_Init is never used
  1432                           	
  1433                           l35:	
  1434  0101                     	return
  1435  0101  0008               	opt stack 0
  1436                           GLOBAL	__end_of_UART_Init
  1437                           	__end_of_UART_Init:
  1438  0102                     	signat	_UART_Init,4217
  1439                           	global	___aldiv
  1440                           
  1441 ;; *************** function ___aldiv *****************
  1442 ;; Defined at:
  1443 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;  divisor         4    2[COMMON] long 
  1446 ;;  dividend        4    6[COMMON] long 
  1447 ;; Auto vars:     Size  Location     Type
  1448 ;;  quotient        4    2[BANK0 ] long 
  1449 ;;  sign            1    1[BANK0 ] unsigned char 
  1450 ;;  counter         1    0[BANK0 ] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  4    2[COMMON] long 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         8       0       0       0       0
  1461 ;;      Locals:         0       6       0       0       0
  1462 ;;      Temps:          1       0       0       0       0
  1463 ;;      Totals:         9       6       0       0       0
  1464 ;;Total ram usage:       15 bytes
  1465 ;; Hardware stack levels used:    1
  1466 ;; Hardware stack levels required when called:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_UART_Init
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  1474                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1475                           	line	5
  1476                           global __ptext4
  1477                           __ptext4:	;psect for function ___aldiv
  1478  0102                     psect	text4
  1479                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1480                           	line	5
  1481                           	global	__size_of___aldiv
  1482                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  1483  00A6                     	
  1484                           ___aldiv:	
  1485  0102                     ;incstack = 0
  1486                           	opt	stack 5
  1487                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1488                           	line	13
  1489                           	
  1490                           l731:	
  1491  0102                     	bcf	status, 5	;RP0=0, select bank0
  1492  0102  1283               	bcf	status, 6	;RP1=0, select bank0
  1493  0103  1303               	clrf	(___aldiv@sign)
  1494  0104  01A1               	line	14
  1495                           	
  1496                           l733:	
  1497  0105                     	btfss	(___aldiv@divisor+3),7
  1498  0105  1FF5               	goto	u211
  1499  0106  2908               	goto	u210
  1500  0107  2909               u211:
  1501  0108                     	goto	l211
  1502  0108  2916               u210:
  1503  0109                     	line	15
  1504                           	
  1505                           l735:	
  1506  0109                     	comf	(___aldiv@divisor),f
  1507  0109  09F2               	comf	(___aldiv@divisor+1),f
  1508  010A  09F3               	comf	(___aldiv@divisor+2),f
  1509  010B  09F4               	comf	(___aldiv@divisor+3),f
  1510  010C  09F5               	incf	(___aldiv@divisor),f
  1511  010D  0AF2               	skipnz
  1512  010E  1903               	incf	(___aldiv@divisor+1),f
  1513  010F  0AF3               	skipnz
  1514  0110  1903               	incf	(___aldiv@divisor+2),f
  1515  0111  0AF4               	skipnz
  1516  0112  1903               	incf	(___aldiv@divisor+3),f
  1517  0113  0AF5               	line	16
  1518                           	clrf	(___aldiv@sign)
  1519  0114  01A1               	incf	(___aldiv@sign),f
  1520  0115  0AA1               	line	17
  1521                           	
  1522                           l211:	
  1523  0116                     	line	18
  1524                           	btfss	(___aldiv@dividend+3),7
  1525  0116  1FF9               	goto	u221
  1526  0117  2919               	goto	u220
  1527  0118  291A               u221:
  1528  0119                     	goto	l741
  1529  0119  292A               u220:
  1530  011A                     	line	19
  1531                           	
  1532                           l737:	
  1533  011A                     	comf	(___aldiv@dividend),f
  1534  011A  09F6               	comf	(___aldiv@dividend+1),f
  1535  011B  09F7               	comf	(___aldiv@dividend+2),f
  1536  011C  09F8               	comf	(___aldiv@dividend+3),f
  1537  011D  09F9               	incf	(___aldiv@dividend),f
  1538  011E  0AF6               	skipnz
  1539  011F  1903               	incf	(___aldiv@dividend+1),f
  1540  0120  0AF7               	skipnz
  1541  0121  1903               	incf	(___aldiv@dividend+2),f
  1542  0122  0AF8               	skipnz
  1543  0123  1903               	incf	(___aldiv@dividend+3),f
  1544  0124  0AF9               	line	20
  1545                           	
  1546                           l739:	
  1547  0125                     	movlw	low(01h)
  1548  0125  3001               	movwf	(??___aldiv+0)+0
  1549  0126  00FA               	movf	(??___aldiv+0)+0,w
  1550  0127  087A               	xorwf	(___aldiv@sign),f
  1551  0128  06A1               	goto	l741
  1552  0129  292A               	line	21
  1553                           	
  1554                           l212:	
  1555  012A                     	line	22
  1556                           	
  1557                           l741:	
  1558  012A                     	movlw	high highword(0)
  1559  012A  3000               	movwf	(___aldiv@quotient+3)
  1560  012B  00A5               	movlw	low highword(0)
  1561  012C  3000               	movwf	(___aldiv@quotient+2)
  1562  012D  00A4               	movlw	high(0)
  1563  012E  3000               	movwf	(___aldiv@quotient+1)
  1564  012F  00A3               	movlw	low(0)
  1565  0130  3000               	movwf	(___aldiv@quotient)
  1566  0131  00A2               
  1567                           	line	23
  1568                           	
  1569                           l743:	
  1570  0132                     	movf	(___aldiv@divisor+3),w
  1571  0132  0875               	iorwf	(___aldiv@divisor+2),w
  1572  0133  0474               	iorwf	(___aldiv@divisor+1),w
  1573  0134  0473               	iorwf	(___aldiv@divisor),w
  1574  0135  0472               	skipnz
  1575  0136  1903               	goto	u231
  1576  0137  2939               	goto	u230
  1577  0138  293A               u231:
  1578  0139                     	goto	l763
  1579  0139  298D               u230:
  1580  013A                     	line	24
  1581                           	
  1582                           l745:	
  1583  013A                     	clrf	(___aldiv@counter)
  1584  013A  01A0               	incf	(___aldiv@counter),f
  1585  013B  0AA0               	line	25
  1586                           	goto	l749
  1587  013C  294B               	
  1588                           l215:	
  1589  013D                     	line	26
  1590                           	
  1591                           l747:	
  1592  013D                     	movlw	01h
  1593  013D  3001               	movwf	(??___aldiv+0)+0
  1594  013E  00FA               u245:
  1595  013F                     	clrc
  1596  013F  1003               	rlf	(___aldiv@divisor),f
  1597  0140  0DF2               	rlf	(___aldiv@divisor+1),f
  1598  0141  0DF3               	rlf	(___aldiv@divisor+2),f
  1599  0142  0DF4               	rlf	(___aldiv@divisor+3),f
  1600  0143  0DF5               	decfsz	(??___aldiv+0)+0
  1601  0144  0BFA               	goto	u245
  1602  0145  293F               	line	27
  1603                           	movlw	low(01h)
  1604  0146  3001               	movwf	(??___aldiv+0)+0
  1605  0147  00FA               	movf	(??___aldiv+0)+0,w
  1606  0148  087A               	addwf	(___aldiv@counter),f
  1607  0149  07A0               	goto	l749
  1608  014A  294B               	line	28
  1609                           	
  1610                           l214:	
  1611  014B                     	line	25
  1612                           	
  1613                           l749:	
  1614  014B                     	btfss	(___aldiv@divisor+3),(31)&7
  1615  014B  1FF5               	goto	u251
  1616  014C  294E               	goto	u250
  1617  014D  294F               u251:
  1618  014E                     	goto	l747
  1619  014E  293D               u250:
  1620  014F                     	goto	l751
  1621  014F  2951               	
  1622                           l216:	
  1623  0150                     	goto	l751
  1624  0150  2951               	line	29
  1625                           	
  1626                           l217:	
  1627  0151                     	line	30
  1628                           	
  1629                           l751:	
  1630  0151                     	movlw	01h
  1631  0151  3001               	movwf	(??___aldiv+0)+0
  1632  0152  00FA               u265:
  1633  0153                     	clrc
  1634  0153  1003               	rlf	(___aldiv@quotient),f
  1635  0154  0DA2               	rlf	(___aldiv@quotient+1),f
  1636  0155  0DA3               	rlf	(___aldiv@quotient+2),f
  1637  0156  0DA4               	rlf	(___aldiv@quotient+3),f
  1638  0157  0DA5               	decfsz	(??___aldiv+0)+0
  1639  0158  0BFA               	goto	u265
  1640  0159  2953               	line	31
  1641                           	
  1642                           l753:	
  1643  015A                     	movf	(___aldiv@divisor+3),w
  1644  015A  0875               	subwf	(___aldiv@dividend+3),w
  1645  015B  0279               	skipz
  1646  015C  1D03               	goto	u275
  1647  015D  2968               	movf	(___aldiv@divisor+2),w
  1648  015E  0874               	subwf	(___aldiv@dividend+2),w
  1649  015F  0278               	skipz
  1650  0160  1D03               	goto	u275
  1651  0161  2968               	movf	(___aldiv@divisor+1),w
  1652  0162  0873               	subwf	(___aldiv@dividend+1),w
  1653  0163  0277               	skipz
  1654  0164  1D03               	goto	u275
  1655  0165  2968               	movf	(___aldiv@divisor),w
  1656  0166  0872               	subwf	(___aldiv@dividend),w
  1657  0167  0276               u275:
  1658  0168                     	skipc
  1659  0168  1C03               	goto	u271
  1660  0169  296B               	goto	u270
  1661  016A  296C               u271:
  1662  016B                     	goto	l759
  1663  016B  297C               u270:
  1664  016C                     	line	32
  1665                           	
  1666                           l755:	
  1667  016C                     	movf	(___aldiv@divisor),w
  1668  016C  0872               	subwf	(___aldiv@dividend),f
  1669  016D  02F6               	movf	(___aldiv@divisor+1),w
  1670  016E  0873               	skipc
  1671  016F  1C03               	incfsz	(___aldiv@divisor+1),w
  1672  0170  0F73               	subwf	(___aldiv@dividend+1),f
  1673  0171  02F7               	movf	(___aldiv@divisor+2),w
  1674  0172  0874               	skipc
  1675  0173  1C03               	incfsz	(___aldiv@divisor+2),w
  1676  0174  0F74               	subwf	(___aldiv@dividend+2),f
  1677  0175  02F8               	movf	(___aldiv@divisor+3),w
  1678  0176  0875               	skipc
  1679  0177  1C03               	incfsz	(___aldiv@divisor+3),w
  1680  0178  0F75               	subwf	(___aldiv@dividend+3),f
  1681  0179  02F9               	line	33
  1682                           	
  1683                           l757:	
  1684  017A                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  1685  017A  1422               	goto	l759
  1686  017B  297C               	line	34
  1687                           	
  1688                           l218:	
  1689  017C                     	line	35
  1690                           	
  1691                           l759:	
  1692  017C                     	movlw	01h
  1693  017C  3001               u285:
  1694  017D                     	clrc
  1695  017D  1003               	rrf	(___aldiv@divisor+3),f
  1696  017E  0CF5               	rrf	(___aldiv@divisor+2),f
  1697  017F  0CF4               	rrf	(___aldiv@divisor+1),f
  1698  0180  0CF3               	rrf	(___aldiv@divisor),f
  1699  0181  0CF2               	addlw	-1
  1700  0182  3EFF               	skipz
  1701  0183  1D03               	goto	u285
  1702  0184  297D               
  1703                           	line	36
  1704                           	
  1705                           l761:	
  1706  0185                     	movlw	01h
  1707  0185  3001               	subwf	(___aldiv@counter),f
  1708  0186  02A0               	btfss	status,2
  1709  0187  1D03               	goto	u291
  1710  0188  298A               	goto	u290
  1711  0189  298B               u291:
  1712  018A                     	goto	l751
  1713  018A  2951               u290:
  1714  018B                     	goto	l763
  1715  018B  298D               	
  1716                           l219:	
  1717  018C                     	goto	l763
  1718  018C  298D               	line	37
  1719                           	
  1720                           l213:	
  1721  018D                     	line	38
  1722                           	
  1723                           l763:	
  1724  018D                     	movf	((___aldiv@sign)),w
  1725  018D  0821               	btfsc	status,2
  1726  018E  1903               	goto	u301
  1727  018F  2991               	goto	u300
  1728  0190  2992               u301:
  1729  0191                     	goto	l767
  1730  0191  299E               u300:
  1731  0192                     	line	39
  1732                           	
  1733                           l765:	
  1734  0192                     	comf	(___aldiv@quotient),f
  1735  0192  09A2               	comf	(___aldiv@quotient+1),f
  1736  0193  09A3               	comf	(___aldiv@quotient+2),f
  1737  0194  09A4               	comf	(___aldiv@quotient+3),f
  1738  0195  09A5               	incf	(___aldiv@quotient),f
  1739  0196  0AA2               	skipnz
  1740  0197  1903               	incf	(___aldiv@quotient+1),f
  1741  0198  0AA3               	skipnz
  1742  0199  1903               	incf	(___aldiv@quotient+2),f
  1743  019A  0AA4               	skipnz
  1744  019B  1903               	incf	(___aldiv@quotient+3),f
  1745  019C  0AA5               	goto	l767
  1746  019D  299E               	
  1747                           l220:	
  1748  019E                     	line	40
  1749                           	
  1750                           l767:	
  1751  019E                     	movf	(___aldiv@quotient+3),w
  1752  019E  0825               	movwf	(?___aldiv+3)
  1753  019F  00F5               	movf	(___aldiv@quotient+2),w
  1754  01A0  0824               	movwf	(?___aldiv+2)
  1755  01A1  00F4               	movf	(___aldiv@quotient+1),w
  1756  01A2  0823               	movwf	(?___aldiv+1)
  1757  01A3  00F3               	movf	(___aldiv@quotient),w
  1758  01A4  0822               	movwf	(?___aldiv)
  1759  01A5  00F2               
  1760                           	goto	l221
  1761  01A6  29A7               	
  1762                           l769:	
  1763  01A7                     	line	41
  1764                           	
  1765                           l221:	
  1766  01A7                     	return
  1767  01A7  0008               	opt stack 0
  1768                           GLOBAL	__end_of___aldiv
  1769                           	__end_of___aldiv:
  1770  01A8                     	signat	___aldiv,8316
  1771                           	global	_ISR
  1772                           
  1773 ;; *************** function _ISR *****************
  1774 ;; Defined at:
  1775 ;;		line 60 in file "main.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;                  1    wreg      void 
  1782 ;; Registers used:
  1783 ;;		wreg
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0
  1791 ;;      Temps:          2       0       0       0       0
  1792 ;;      Totals:         2       0       0       0       0
  1793 ;;Total ram usage:        2 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; This function calls:
  1796 ;;		Nothing
  1797 ;; This function is called by:
  1798 ;;		Interrupt level 1
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1802                           	file	"main.c"
  1803                           	line	60
  1804                           global __ptext5
  1805                           __ptext5:	;psect for function _ISR
  1806  0248                     psect	text5
  1807                           	file	"main.c"
  1808                           	line	60
  1809                           	global	__size_of_ISR
  1810                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1811  000B                     	
  1812                           _ISR:	
  1813  0248                     ;incstack = 0
  1814                           	opt	stack 5
  1815                           ; Regs used in _ISR: [wreg]
  1816                           psect	intentry,class=CODE,delta=2
  1817                           global __pintentry
  1818                           __pintentry:
  1819  0004                     global interrupt_function
  1820                           interrupt_function:
  1821  0004                     	global saved_w
  1822                           	saved_w	set	btemp+0
  1823  007E                     	movwf	saved_w
  1824  0004  00FE               	swapf	status,w
  1825  0005  0E03               	movwf	(??_ISR+0)
  1826  0006  00F0               	movf	pclath,w
  1827  0007  080A               	movwf	(??_ISR+1)
  1828  0008  00F1               	ljmp	_ISR
  1829  0009  120A  118A  2A48   psect	text5
  1830                           	line	61
  1831                           	
  1832                           i1l713:	
  1833  0248                     ;main.c: 61: 
  1834                           	bcf	status, 5	;RP0=0, select bank0
  1835  0248  1283               	bcf	status, 6	;RP1=0, select bank0
  1836  0249  1303               	movf	(26),w	;volatile
  1837  024A  081A               	movwf	(8)	;volatile
  1838  024B  0088               	line	62
  1839                           	
  1840                           i1l52:	
  1841  024C                     	movf	(??_ISR+1),w
  1842  024C  0871               	movwf	pclath
  1843  024D  008A               	swapf	(??_ISR+0)^0FFFFFF80h,w
  1844  024E  0E70               	movwf	status
  1845  024F  0083               	swapf	saved_w,f
  1846  0250  0EFE               	swapf	saved_w,w
  1847  0251  0E7E               	retfie
  1848  0252  0009               	opt stack 0
  1849                           GLOBAL	__end_of_ISR
  1850                           	__end_of_ISR:
  1851  0253                     	signat	_ISR,89
  1852                           global	___latbits
  1853                           ___latbits	equ	2
  1854  0002                     	global	btemp
  1855                           	btemp set 07Eh
  1856  007E                     
  1857                           	DABS	1,126,2	;btemp
  1858                           	global	wtemp0
  1859                           	wtemp0 set btemp+0
  1860  007E                     	end


Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80     31      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 18
		 -> STR_2(CODE[11]), STR_1(CODE[18]), 


Critical Paths under _main in COMMON

    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    1007
                                             24 BANK0      7     3      4
                          _UART_Init
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      3     3      0     171
                                              3 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              6 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              2 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write_Text
     _UART_Write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      1F       5       38.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sun Nov 17 14:08:00 2019

                       pc 0002                        l40 0243                        l33 00E6  
                      l41 0247                        l34 0101                        l35 0101  
                      l44 0208                        l60 01ED                        l45 01F4  
                      l38 023C                        l46 0216                        l39 023C  
                      l47 0216                        l57 01C3                        l58 01EC  
                      l59 01ED                        u10 0242                        u11 0241  
                      fsr 0004                       l211 0116                       l220 019E  
                     l212 012A                       l221 01A7                       l213 018D  
                     l214 014B                       l215 013D                       l216 0150  
                     l217 0151                       l218 017C                       l219 018C  
                     l633 023B                       l801 01F4                       l731 0102  
                     l635 0243                       l803 0201                       l811 01BC  
                     l741 012A                       l733 0105                       l805 0208  
                     l821 01DD                       l813 01BF                       l751 0151  
                     l743 0132                       l735 0109                       l815 01C3  
                     l807 01A8                       l761 0185                       l753 015A  
                     l745 013A                       l737 011A                       l817 01C9  
                     l809 01AD                       l755 016C                       l747 013D  
                     l763 018D                       l739 0125                       l771 0013  
                     l819 01D7                       l765 0192                       l757 017A  
                     l749 014B                       l781 00F0                       l773 0077  
                     l767 019E                       l759 017C                       l791 00FC  
                     l783 00F4                       l775 0080                       l769 01A7  
                     l793 00FD                       l785 00F5                       l777 00E2  
                     l795 00FE                       l787 00F8                       l779 00E6  
                     l797 0100                       l789 00F9                       l799 01F1  
                     u210 0109                       u211 0108                       u300 0192  
                     u220 011A                       u301 0191                       u221 0119  
                     u230 013A                       u310 0023                       u231 0139  
                     u320 0044                       u250 014F                       u330 0059  
                     u251 014E                       u331 005A                       u315 001E  
                     u340 0080                       u332 005F                       u245 013F  
                     u341 007F                       u333 0060                       u325 003F  
                     u270 016C                       u350 008E                       u271 016B  
                     u407 01D1                       u360 00AF                       u265 0153  
                     u417 01E5                       u290 018B                       u370 00C4  
                     u291 018A                       u275 0168                       u371 00C5  
                     u355 0089                       u380 00F0                       u372 00CA  
                     _ISR 0248                       u285 017D                       u381 00EF  
                     u373 00CB                       u365 00AA                       u390 0215  
                     u391 0214                       fsr0 0004              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      STR_1 021D                      STR_2 022F  
                    _BRGH 04C2                      _CREN 00C4                      _PIE1 008C  
                    i1l52 024C                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4                      _main 01A8  
                    btemp 007E                      start 000C   __end_of_UART_Write_Text 0217  
                   ??_ISR 0070           __end_of___aldiv 01A8                     ?_main 0038  
           __CFG_WDTE$OFF 0000                     i1l713 0248                     _RCREG 001A  
                   _SPBRG 0099                     _PORTD 0008                     _TRISD 0088  
                   _TXREG 0019               ?_UART_Write 0070        __size_of_UART_Init 00EF  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 01F0  
                  ??_main 003C                    _INTCON 000B                    _OSCCON 008F  
       __end_of_UART_Init 0102       __size_of_UART_Write 000E                 ??___aldiv 007A  
        ?_UART_Write_Text 0070                    saved_w 007E   __end_of__initialization 000F  
          __pcstackCOMMON 0070                __pmaintext 01A8                __pintentry 0004  
            ??_UART_Write 0072                __stringtab 0217                   ___aldiv 0102  
      __end_of_UART_Write 0248                   __ptext1 01F0                   __ptext2 023A  
                 __ptext3 0013                   __ptext4 0102                   __ptext5 0248  
            __size_of_ISR 000B          ___aldiv@dividend 0076      end_of_initialization 000F  
        ___aldiv@quotient 0022                 _UART_Init 0013            UART_Write@data 0072  
              ?_UART_Init 0026  __size_of_UART_Write_Text 0027       start_initialization 000F  
             __end_of_ISR 0253  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
           __pcstackBANK0 0020                  ?___aldiv 0072               ??_UART_Init 002A  
               __pstrings 0217                UART_Init@x 0036         ??_UART_Write_Text 0073  
         ___aldiv@divisor 0072         interrupt_function 0004           ___aldiv@counter 0020  
       UART_Init@baudrate 0026               __stringbase 021C          __size_of___aldiv 00A6  
      __end_of__stringtab 021D       UART_Write_Text@text 0075             __size_of_main 0048  
                main@argc 0038                  main@argv 003A                  intlevel1 0000  
               stringcode 0217           _UART_Write_Text 01F0                  stringdir 0217  
                stringtab 0217              ___aldiv@sign 0021                _UART_Write 023A  
        UART_Write_Text@i 0073  
