

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Nov 16 16:47:22 2019

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     	FNCALL	_main,_UART_Init
   400                           	FNCALL	_main,_UART_Write_Text
   401                           	FNCALL	_UART_Write_Text,_UART_Write
   402                           	FNCALL	_UART_Init,___aldiv
   403                           	FNROOT	_main
   404                           	global	_PORTD
   405                           _PORTD	set	0x8
   406  0008                     	global	_TXREG
   407                           _TXREG	set	0x19
   408  0019                     	global	_GIE
   409                           _GIE	set	0x5F
   410  005F                     	global	_PEIE
   411                           _PEIE	set	0x5E
   412  005E                     	global	_CREN
   413                           _CREN	set	0xC4
   414  00C4                     	global	_SPEN
   415                           _SPEN	set	0xC7
   416  00C7                     	global	_TRISD
   417                           _TRISD	set	0x88
   418  0088                     	global	_OSCCON
   419                           _OSCCON	set	0x8F
   420  008F                     	global	_SPBRG
   421                           _SPBRG	set	0x99
   422  0099                     	global	_TRMT
   423                           _TRMT	set	0x4C1
   424  04C1                     	global	_TXEN
   425                           _TXEN	set	0x4C5
   426  04C5                     	global	_RCIE
   427                           _RCIE	set	0x465
   428  0465                     	global	_SYNC
   429                           _SYNC	set	0x4C4
   430  04C4                     	global	_BRGH
   431                           _BRGH	set	0x4C2
   432  04C2                     psect	strings,class=STRING,delta=2,noexec
   433                           global __pstrings
   434                           __pstrings:
   435  0003                     stringtab:
   436  0003                     	global    __stringtab
   437                           __stringtab:
   438  0003                     ;	String table - string pointers are 1 byte each
   439                           stringcode:stringdir:
   440  0003                     movlw high(stringdir)
      + 0003                     stringdir:	
   441  0003  3000               movwf pclath
   442  0004  008A               movf fsr,w
   443  0005  0804               incf fsr
   444  0006  0A84               	addwf pc
   445  0007  0782               	global __stringbase
   446                           __stringbase:
   447  0008                     	retlw	0
   448  0008  3400               psect	strings
   449                           	global    __end_of__stringtab
   450                           __end_of__stringtab:
   451  0009                     	
   452                           STR_1:	
   453  0009                     	retlw	87	;'W'
   454  0009  3457               	retlw	104	;'h'
   455  000A  3468               	retlw	121	;'y'
   456  000B  3479               	retlw	32	;' '
   457  000C  3420               	retlw	104	;'h'
   458  000D  3468               	retlw	101	;'e'
   459  000E  3465               	retlw	108	;'l'
   460  000F  346C               	retlw	108	;'l'
   461  0010  346C               	retlw	111	;'o'
   462  0011  346F               	retlw	32	;' '
   463  0012  3420               	retlw	116	;'t'
   464  0013  3474               	retlw	104	;'h'
   465  0014  3468               	retlw	101	;'e'
   466  0015  3465               	retlw	114	;'r'
   467  0016  3472               	retlw	101	;'e'
   468  0017  3465               	retlw	10
   469  0018  340A               	retlw	0
   470  0019  3400               psect	strings
   471                           	
   472                           STR_2:	
   473  001A                     	retlw	65	;'A'
   474  001A  3441               	retlw	121	;'y'
   475  001B  3479               	retlw	121	;'y'
   476  001C  3479               	retlw	32	;' '
   477  001D  3420               	retlw	76	;'L'
   478  001E  344C               	retlw	109	;'m'
   479  001F  346D               	retlw	97	;'a'
   480  0020  3461               	retlw	111	;'o'
   481  0021  346F               	retlw	10
   482  0022  340A               	retlw	0
   483  0023  3400               psect	strings
   484                           ; #config settings
   485                           global __CFG_FOSC$INTRC_NOCLKOUT
   486                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   487  0000                     global __CFG_WDTE$OFF
   488                           __CFG_WDTE$OFF equ 0x0
   489  0000                     global __CFG_MCLRE$OFF
   490                           __CFG_MCLRE$OFF equ 0x0
   491  0000                     global __CFG_LVP$OFF
   492                           __CFG_LVP$OFF equ 0x0
   493  0000                     	file	"C:\Users\flyhi\AppData\Local\Temp\skgg."
   494                           	line	#
   495                           psect cinit,class=CODE,delta=2
   496                           global start_initialization
   497                           start_initialization:
   498  07FC                     
   499                           global __initialization
   500                           __initialization:
   501  07FC                     psect cinit,class=CODE,delta=2,merge=1
   502                           global end_of_initialization,__end_of__initialization
   503                           
   504                           ;End of C runtime variable initialization code
   505                           
   506                           end_of_initialization:
   507  07FC                     __end_of__initialization:
   508  07FC                     clrf status
   509  07FC  0183               ljmp _main	;jump to C main() function
   510  07FD  120A  118A  2E20   psect	cstackCOMMON,class=COMMON,space=1,noexec
   511                           global __pcstackCOMMON
   512                           __pcstackCOMMON:
   513  0070                     ?_UART_Write:	; 1 bytes @ 0x0
   514  0070                     ??_UART_Write:	; 1 bytes @ 0x0
   515  0070                     ?_UART_Write_Text:	; 1 bytes @ 0x0
   516  0070                     	global	?___aldiv
   517                           ?___aldiv:	; 4 bytes @ 0x0
   518  0070                     	global	UART_Write@data
   519                           UART_Write@data:	; 1 bytes @ 0x0
   520  0070                     	global	___aldiv@divisor
   521                           ___aldiv@divisor:	; 4 bytes @ 0x0
   522  0070                     	ds	1
   523  0070                     ??_UART_Write_Text:	; 1 bytes @ 0x1
   524  0071                     	global	UART_Write_Text@i
   525                           UART_Write_Text@i:	; 2 bytes @ 0x1
   526  0071                     	ds	2
   527  0071                     	global	UART_Write_Text@text
   528                           UART_Write_Text@text:	; 1 bytes @ 0x3
   529  0073                     	ds	1
   530  0073                     	global	___aldiv@dividend
   531                           ___aldiv@dividend:	; 4 bytes @ 0x4
   532  0074                     	ds	4
   533  0074                     ??___aldiv:	; 1 bytes @ 0x8
   534  0078                     	ds	1
   535  0078                     	global	UART_Init@x
   536                           UART_Init@x:	; 2 bytes @ 0x9
   537  0079                     	ds	2
   538  0079                     ??_main:	; 1 bytes @ 0xB
   539  007B                     	ds	3
   540  007B                     psect	cstackBANK0,class=BANK0,space=1,noexec
   541                           global __pcstackBANK0
   542                           __pcstackBANK0:
   543  0020                     	global	___aldiv@counter
   544                           ___aldiv@counter:	; 1 bytes @ 0x0
   545  0020                     	ds	1
   546  0020                     	global	___aldiv@sign
   547                           ___aldiv@sign:	; 1 bytes @ 0x1
   548  0021                     	ds	1
   549  0021                     	global	___aldiv@quotient
   550                           ___aldiv@quotient:	; 4 bytes @ 0x2
   551  0022                     	ds	4
   552  0022                     ?_UART_Init:	; 1 bytes @ 0x6
   553  0026                     	global	UART_Init@baudrate
   554                           UART_Init@baudrate:	; 4 bytes @ 0x6
   555  0026                     	ds	4
   556  0026                     ??_UART_Init:	; 1 bytes @ 0xA
   557  002A                     	ds	12
   558  002A                     ?_main:	; 2 bytes @ 0x16
   559  0036                     main@argc:	; 2 bytes @ 0x16
   560  0036                     	ds	2
   561  0036                     main@argv:	; 2 bytes @ 0x18
   562  0038                     	ds	2
   563  0038                     ;!
   564                           ;!Data Sizes:
   565                           ;!    Strings     27
   566                           ;!    Constant    0
   567                           ;!    Data        0
   568                           ;!    BSS         0
   569                           ;!    Persistent  0
   570                           ;!    Stack       0
   571                           ;!
   572                           ;!Auto Spaces:
   573                           ;!    Space          Size  Autos    Used
   574                           ;!    COMMON           14     14      14
   575                           ;!    BANK0            80     26      26
   576                           ;!    BANK1            80      0       0
   577                           ;!    BANK3            96      0       0
   578                           ;!    BANK2            96      0       0
   579                           
   580                           ;!
   581                           ;!Pointer List with Targets:
   582                           ;!
   583                           ;!    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 17
   584                           ;!		 -> STR_2(CODE[10]), STR_1(CODE[17]), 
   585                           ;!
   586                           
   587                           
   588                           ;!
   589                           ;!Critical Paths under _main in COMMON
   590                           ;!
   591                           ;!    _main->_UART_Init
   592                           ;!    _UART_Write_Text->_UART_Write
   593                           ;!    _UART_Init->___aldiv
   594                           ;!
   595                           ;!Critical Paths under _main in BANK0
   596                           ;!
   597                           ;!    _main->_UART_Init
   598                           ;!    _UART_Init->___aldiv
   599                           ;!
   600                           ;!Critical Paths under _main in BANK1
   601                           ;!
   602                           ;!    None.
   603                           ;!
   604                           ;!Critical Paths under _main in BANK3
   605                           ;!
   606                           ;!    None.
   607                           ;!
   608                           ;!Critical Paths under _main in BANK2
   609                           ;!
   610                           ;!    None.
   611                           
   612 ;;
   613 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   614 ;;
   615                           
   616                           ;!
   617                           ;!Call Graph Tables:
   618                           ;!
   619                           ;! ---------------------------------------------------------------------------------
   620                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   621                           ;! ---------------------------------------------------------------------------------
   622                           ;! (0) _main                                                 7     3      4    1007
   623                           ;!                                             11 COMMON     3     3      0
   624                           ;!                                             22 BANK0      4     0      4
   625                           ;!                          _UART_Init
   626                           ;!                    _UART_Write_Text
   627                           ;! ---------------------------------------------------------------------------------
   628                           ;! (1) _UART_Write_Text                                      3     3      0     171
   629                           ;!                                              1 COMMON     3     3      0
   630                           ;!                         _UART_Write
   631                           ;! ---------------------------------------------------------------------------------
   632                           ;! (2) _UART_Write                                           1     1      0      15
   633                           ;!                                              0 COMMON     1     1      0
   634                           ;! ---------------------------------------------------------------------------------
   635                           ;! (1) _UART_Init                                           18    14      4     836
   636                           ;!                                              9 COMMON     2     2      0
   637                           ;!                                              6 BANK0     16    12      4
   638                           ;!                            ___aldiv
   639                           ;! ---------------------------------------------------------------------------------
   640                           ;! (2) ___aldiv                                             15     7      8     604
   641                           ;!                                              0 COMMON     9     1      8
   642                           ;!                                              0 BANK0      6     6      0
   643                           ;! ---------------------------------------------------------------------------------
   644                           ;! Estimated maximum stack depth 2
   645                           ;! ---------------------------------------------------------------------------------
   646                           ;!
   647                           ;! Call Graph Graphs:
   648                           ;!
   649                           ;! _main (ROOT)
   650                           ;!   _UART_Init
   651                           ;!     ___aldiv
   652                           ;!   _UART_Write_Text
   653                           ;!     _UART_Write
   654                           ;!
   655                           
   656                           ;! Address spaces:
   657                           
   658                           ;!Name               Size   Autos  Total    Cost      Usage
   659                           ;!BITCOMMON            E      0       0       0        0.0%
   660                           ;!EEDATA             100      0       0       0        0.0%
   661                           ;!NULL                 0      0       0       0        0.0%
   662                           ;!CODE                 0      0       0       0        0.0%
   663                           ;!COMMON               E      E       E       1      100.0%
   664                           ;!BITSFR0              0      0       0       1        0.0%
   665                           ;!SFR0                 0      0       0       1        0.0%
   666                           ;!BITSFR1              0      0       0       2        0.0%
   667                           ;!SFR1                 0      0       0       2        0.0%
   668                           ;!STACK                0      0       0       2        0.0%
   669                           ;!ABS                  0      0       0       3        0.0%
   670                           ;!BITBANK0            50      0       0       4        0.0%
   671                           ;!BITSFR3              0      0       0       4        0.0%
   672                           ;!SFR3                 0      0       0       4        0.0%
   673                           ;!BANK0               50     1A      1A       5       32.5%
   674                           ;!BITSFR2              0      0       0       5        0.0%
   675                           ;!SFR2                 0      0       0       5        0.0%
   676                           ;!BITBANK1            50      0       0       6        0.0%
   677                           ;!BANK1               50      0       0       7        0.0%
   678                           ;!BITBANK3            60      0       0       8        0.0%
   679                           ;!BANK3               60      0       0       9        0.0%
   680                           ;!BITBANK2            60      0       0      10        0.0%
   681                           ;!BANK2               60      0       0      11        0.0%
   682                           ;!DATA                 0      0       0      12        0.0%
   683                           
   684                           	global	_main
   685                           
   686 ;; *************** function _main *****************
   687 ;; Defined at:
   688 ;;		line 53 in file "main.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;  argc            2   22[BANK0 ] int 
   691 ;;  argv            2   24[BANK0 ] PTR PTR unsigned char 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  2   22[BANK0 ] int 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : B00/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       4       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          3       0       0       0       0
   706 ;;      Totals:         3       4       0       0       0
   707 ;;Total ram usage:        7 bytes
   708 ;; Hardware stack levels required when called:    2
   709 ;; This function calls:
   710 ;;		_UART_Init
   711 ;;		_UART_Write_Text
   712 ;; This function is called by:
   713 ;;		Startup code after reset
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   717                           	file	"main.c"
   718                           	line	53
   719                           global __pmaintext
   720                           __pmaintext:	;psect for function _main
   721  0620                     psect	maintext
   722                           	file	"main.c"
   723                           	line	53
   724                           	global	__size_of_main
   725                           	__size_of_main	equ	__end_of_main-_main
   726  004A                     	
   727                           _main:	
   728  0620                     ;incstack = 0
   729                           	opt	stack 6
   730                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   731                           	line	57
   732                           	
   733                           l802:	
   734  0620                     ;main.c: 57:     return (0);
   735                           	bsf	status, 5	;RP0=1, select bank1
   736  0620  1683               	bcf	status, 6	;RP1=0, select bank1
   737  0621  1303               	bsf	(143)^080h+(6/8),(6)&7	;volatile
   738  0622  170F               	line	58
   739                           ;main.c: 58: }
   740                           	bsf	(143)^080h+(5/8),(5)&7	;volatile
   741  0623  168F               	line	59
   742                           	bsf	(143)^080h+(4/8),(4)&7	;volatile
   743  0624  160F               	line	61
   744                           	
   745                           l804:	
   746  0625                     	movlw	0
   747  0625  3000               	bcf	status, 5	;RP0=0, select bank0
   748  0626  1283               	bcf	status, 6	;RP1=0, select bank0
   749  0627  1303               	movwf	(UART_Init@baudrate+3)
   750  0628  00A9               	movlw	0
   751  0629  3000               	movwf	(UART_Init@baudrate+2)
   752  062A  00A8               	movlw	025h
   753  062B  3025               	movwf	(UART_Init@baudrate+1)
   754  062C  00A7               	movlw	080h
   755  062D  3080               	movwf	(UART_Init@baudrate)
   756  062E  00A6               
   757                           	fcall	_UART_Init
   758  062F  120A  118A  2710  120A  118A  	line	62
   759                           	
   760                           l806:	
   761  0634                     	bsf	status, 5	;RP0=1, select bank1
   762  0634  1683               	bcf	status, 6	;RP1=0, select bank1
   763  0635  1303               	clrf	(136)^080h	;volatile
   764  0636  0188               	goto	l808
   765  0637  2E38               	line	63
   766                           	
   767                           l52:	
   768  0638                     	line	64
   769                           	
   770                           l808:	
   771  0638                     	movlw	low(0FFh)
   772  0638  30FF               	bcf	status, 5	;RP0=0, select bank0
   773  0639  1283               	bcf	status, 6	;RP1=0, select bank0
   774  063A  1303               	movwf	(8)	;volatile
   775  063B  0088               	line	65
   776                           	
   777                           l810:	
   778  063C                     	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
   779  063C  3001               	fcall	_UART_Write_Text
   780  063D  120A  118A  25F9  120A  118A  	line	66
   781                           	
   782                           l812:	
   783  0642                     	opt asmopt_push
   784                           opt asmopt_off
   785                           movlw  11
   786  0642  300B               movwf	((??_main+0)+0+2),f
   787  0643  00FD               movlw	38
   788  0644  3026               movwf	((??_main+0)+0+1),f
   789  0645  00FC               	movlw	93
   790  0646  305D               movwf	((??_main+0)+0),f
   791  0647  00FB               	u407:
   792  0648                     decfsz	((??_main+0)+0),f
   793  0648  0BFB               	goto	u407
   794  0649  2E48               	decfsz	((??_main+0)+0+1),f
   795  064A  0BFC               	goto	u407
   796  064B  2E48               	decfsz	((??_main+0)+0+2),f
   797  064C  0BFD               	goto	u407
   798  064D  2E48               	nop2
   799  064E  2E4F               opt asmopt_pop
   800                           
   801                           	line	67
   802                           	
   803                           l814:	
   804  064F                     	bcf	status, 5	;RP0=0, select bank0
   805  064F  1283               	bcf	status, 6	;RP1=0, select bank0
   806  0650  1303               	clrf	(8)	;volatile
   807  0651  0188               	line	68
   808                           	
   809                           l816:	
   810  0652                     	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
   811  0652  3012               	fcall	_UART_Write_Text
   812  0653  120A  118A  25F9  120A  118A  	line	69
   813                           	
   814                           l818:	
   815  0658                     	opt asmopt_push
   816                           opt asmopt_off
   817                           movlw  11
   818  0658  300B               movwf	((??_main+0)+0+2),f
   819  0659  00FD               movlw	38
   820  065A  3026               movwf	((??_main+0)+0+1),f
   821  065B  00FC               	movlw	93
   822  065C  305D               movwf	((??_main+0)+0),f
   823  065D  00FB               	u417:
   824  065E                     decfsz	((??_main+0)+0),f
   825  065E  0BFB               	goto	u417
   826  065F  2E5E               	decfsz	((??_main+0)+0+1),f
   827  0660  0BFC               	goto	u417
   828  0661  2E5E               	decfsz	((??_main+0)+0+2),f
   829  0662  0BFD               	goto	u417
   830  0663  2E5E               	nop2
   831  0664  2E65               opt asmopt_pop
   832                           
   833                           	goto	l808
   834  0665  2E38               	line	70
   835                           	
   836                           l53:	
   837  0666                     	goto	l808
   838  0666  2E38               	
   839                           l54:	
   840  0667                     	line	72
   841                           ;	Return value of _main is never used
   842                           	
   843                           l55:	
   844  0667                     	global	start
   845                           	ljmp	start
   846  0667  120A  118A  2800   	opt stack 0
   847                           GLOBAL	__end_of_main
   848                           	__end_of_main:
   849  066A                     	signat	_main,8314
   850                           	global	_UART_Write_Text
   851                           
   852 ;; *************** function _UART_Write_Text *****************
   853 ;; Defined at:
   854 ;;		line 46 in file "main.c"
   855 ;; Parameters:    Size  Location     Type
   856 ;;  text            1    wreg     PTR unsigned char 
   857 ;;		 -> STR_2(10), STR_1(17), 
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  text            1    3[COMMON] PTR unsigned char 
   860 ;;		 -> STR_2(10), STR_1(17), 
   861 ;;  i               2    1[COMMON] int 
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   871 ;;      Params:         0       0       0       0       0
   872 ;;      Locals:         3       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0
   874 ;;      Totals:         3       0       0       0       0
   875 ;;Total ram usage:        3 bytes
   876 ;; Hardware stack levels used:    1
   877 ;; Hardware stack levels required when called:    1
   878 ;; This function calls:
   879 ;;		_UART_Write
   880 ;; This function is called by:
   881 ;;		_main
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   885                           	line	46
   886                           global __ptext1
   887                           __ptext1:	;psect for function _UART_Write_Text
   888  05F9                     psect	text1
   889                           	file	"main.c"
   890                           	line	46
   891                           	global	__size_of_UART_Write_Text
   892                           	__size_of_UART_Write_Text	equ	__end_of_UART_Write_Text-_UART_Write_Text
   893  0027                     	
   894                           _UART_Write_Text:	
   895  05F9                     ;incstack = 0
   896                           	opt	stack 6
   897                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   898                           ;UART_Write_Text@text stored from wreg
   899                           	movwf	(UART_Write_Text@text)
   900  05F9  00F3               	line	49
   901                           	
   902                           l794:	
   903  05FA                     ;main.c: 46: ;main.c: 47:     UART_Init(9600);;main.c: 48:     TRISD = 0x00;;main.c: 49:
                                      while (1) {
   904                           	clrf	(UART_Write_Text@i)
   905  05FA  01F1               	clrf	(UART_Write_Text@i+1)
   906  05FB  01F2               	goto	l800
   907  05FC  2E11               	
   908                           l45:	
   909  05FD                     	line	50
   910                           	
   911                           l796:	
   912  05FD                     ;main.c: 50:         PORTD = 0xff;
   913                           	movf	(UART_Write_Text@i),w
   914  05FD  0871               	addwf	(UART_Write_Text@text),w
   915  05FE  0773               	movwf	fsr0
   916  05FF  0084               	fcall	stringdir
   917  0600  120A  118A  2003  120A  118A  	fcall	_UART_Write
   918  0605  120A  118A  25EB  120A  118A  	
   919                           l798:	
   920  060A                     	movlw	01h
   921  060A  3001               	addwf	(UART_Write_Text@i),f
   922  060B  07F1               	skipnc
   923  060C  1803               	incf	(UART_Write_Text@i+1),f
   924  060D  0AF2               	movlw	0
   925  060E  3000               	addwf	(UART_Write_Text@i+1),f
   926  060F  07F2               	goto	l800
   927  0610  2E11               	
   928                           l44:	
   929  0611                     	
   930                           l800:	
   931  0611                     	movf	(UART_Write_Text@i),w
   932  0611  0871               	addwf	(UART_Write_Text@text),w
   933  0612  0773               	movwf	fsr0
   934  0613  0084               	fcall	stringdir
   935  0614  120A  118A  2003  120A  118A  	xorlw	0
   936  0619  3A00               	skipz
   937  061A  1D03               	goto	u391
   938  061B  2E1D               	goto	u390
   939  061C  2E1E               u391:
   940  061D                     	goto	l796
   941  061D  2DFD               u390:
   942  061E                     	goto	l47
   943  061E  2E1F               	
   944                           l46:	
   945  061F                     	line	51
   946                           	
   947                           l47:	
   948  061F                     	return
   949  061F  0008               	opt stack 0
   950                           GLOBAL	__end_of_UART_Write_Text
   951                           	__end_of_UART_Write_Text:
   952  0620                     	signat	_UART_Write_Text,4217
   953                           	global	_UART_Write
   954                           
   955 ;; *************** function _UART_Write *****************
   956 ;; Defined at:
   957 ;;		line 40 in file "main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;  data            1    wreg     unsigned char 
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  data            1    0[COMMON] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  1    wreg      void 
   964 ;; Registers used:
   965 ;;		wreg
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   971 ;;      Params:         0       0       0       0       0
   972 ;;      Locals:         1       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0
   974 ;;      Totals:         1       0       0       0       0
   975 ;;Total ram usage:        1 bytes
   976 ;; Hardware stack levels used:    1
   977 ;; This function calls:
   978 ;;		Nothing
   979 ;; This function is called by:
   980 ;;		_UART_Write_Text
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   984                           	line	40
   985                           global __ptext2
   986                           __ptext2:	;psect for function _UART_Write
   987  05EB                     psect	text2
   988                           	file	"main.c"
   989                           	line	40
   990                           	global	__size_of_UART_Write
   991                           	__size_of_UART_Write	equ	__end_of_UART_Write-_UART_Write
   992  000E                     	
   993                           _UART_Write:	
   994  05EB                     ;incstack = 0
   995                           	opt	stack 6
   996                           ; Regs used in _UART_Write: [wreg]
   997                           ;UART_Write@data stored from wreg
   998                           	movwf	(UART_Write@data)
   999  05EB  00F0               	line	42
  1000                           	
  1001                           l628:	
  1002  05EC                     ;main.c: 40: ;main.c: 41: ;main.c: 42: 
  1003                           	goto	l38
  1004  05EC  2DED               	
  1005                           l39:	
  1006  05ED                     	
  1007                           l38:	
  1008  05ED                     	bsf	status, 5	;RP0=1, select bank1
  1009  05ED  1683               	bcf	status, 6	;RP1=0, select bank1
  1010  05EE  1303               	btfss	(1217/8)^080h,(1217)&7	;volatile
  1011  05EF  1C98               	goto	u11
  1012  05F0  2DF2               	goto	u10
  1013  05F1  2DF3               u11:
  1014  05F2                     	goto	l38
  1015  05F2  2DED               u10:
  1016  05F3                     	goto	l630
  1017  05F3  2DF4               	
  1018                           l40:	
  1019  05F4                     	line	43
  1020                           	
  1021                           l630:	
  1022  05F4                     ;main.c: 43:     OSCCON |= 1ULL << 6;
  1023                           	movf	(UART_Write@data),w
  1024  05F4  0870               	bcf	status, 5	;RP0=0, select bank0
  1025  05F5  1283               	bcf	status, 6	;RP1=0, select bank0
  1026  05F6  1303               	movwf	(25)	;volatile
  1027  05F7  0099               	line	44
  1028                           	
  1029                           l41:	
  1030  05F8                     	return
  1031  05F8  0008               	opt stack 0
  1032                           GLOBAL	__end_of_UART_Write
  1033                           	__end_of_UART_Write:
  1034  05F9                     	signat	_UART_Write,4217
  1035                           	global	_UART_Init
  1036                           
  1037 ;; *************** function _UART_Init *****************
  1038 ;; Defined at:
  1039 ;;		line 18 in file "main.c"
  1040 ;; Parameters:    Size  Location     Type
  1041 ;;  baudrate        4    6[BANK0 ] const long 
  1042 ;; Auto vars:     Size  Location     Type
  1043 ;;  x               2    9[COMMON] unsigned int 
  1044 ;; Return value:  Size  Location     Type
  1045 ;;                  1    wreg      unsigned char 
  1046 ;; Registers used:
  1047 ;;		wreg, status,2, status,0, pclath, cstack
  1048 ;; Tracked objects:
  1049 ;;		On entry : 0/0
  1050 ;;		On exit  : 0/0
  1051 ;;		Unchanged: 0/0
  1052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1053 ;;      Params:         0       4       0       0       0
  1054 ;;      Locals:         2       0       0       0       0
  1055 ;;      Temps:          0      12       0       0       0
  1056 ;;      Totals:         2      16       0       0       0
  1057 ;;Total ram usage:       18 bytes
  1058 ;; Hardware stack levels used:    1
  1059 ;; Hardware stack levels required when called:    1
  1060 ;; This function calls:
  1061 ;;		___aldiv
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1067                           	line	18
  1068                           global __ptext3
  1069                           __ptext3:	;psect for function _UART_Init
  1070  0710                     psect	text3
  1071                           	file	"main.c"
  1072                           	line	18
  1073                           	global	__size_of_UART_Init
  1074                           	__size_of_UART_Init	equ	__end_of_UART_Init-_UART_Init
  1075  00EC                     	
  1076                           _UART_Init:	
  1077  0710                     ;incstack = 0
  1078                           	opt	stack 6
  1079                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1080                           	line	20
  1081                           	
  1082                           l766:	
  1083  0710                     ;main.c: 19:         GIE = 1;;main.c: 20:         TXEN = 1;
  1084                           	bcf	status, 5	;RP0=0, select bank0
  1085  0710  1283               	bcf	status, 6	;RP1=0, select bank0
  1086  0711  1303               	movf	(UART_Init@baudrate),w
  1087  0712  0826               	movwf	(??_UART_Init+0)+0
  1088  0713  00AA               	movf	(UART_Init@baudrate+1),w
  1089  0714  0827               	movwf	((??_UART_Init+0)+0+1)
  1090  0715  00AB               	movf	(UART_Init@baudrate+2),w
  1091  0716  0828               	movwf	((??_UART_Init+0)+0+2)
  1092  0717  00AC               	movf	(UART_Init@baudrate+3),w
  1093  0718  0829               	movwf	((??_UART_Init+0)+0+3)
  1094  0719  00AD               	movlw	06h
  1095  071A  3006               u315:
  1096  071B                     	clrc
  1097  071B  1003               	rlf	(??_UART_Init+0)+0,f
  1098  071C  0DAA               	rlf	(??_UART_Init+0)+1,f
  1099  071D  0DAB               	rlf	(??_UART_Init+0)+2,f
  1100  071E  0DAC               	rlf	(??_UART_Init+0)+3,f
  1101  071F  0DAD               u310:
  1102  0720                     	addlw	-1
  1103  0720  3EFF               	skipz
  1104  0721  1D03               	goto	u315
  1105  0722  2F1B               	movf	3+(??_UART_Init+0)+0,w
  1106  0723  082D               	movwf	(___aldiv@divisor+3)
  1107  0724  00F3               	movf	2+(??_UART_Init+0)+0,w
  1108  0725  082C               	movwf	(___aldiv@divisor+2)
  1109  0726  00F2               	movf	1+(??_UART_Init+0)+0,w
  1110  0727  082B               	movwf	(___aldiv@divisor+1)
  1111  0728  00F1               	movf	0+(??_UART_Init+0)+0,w
  1112  0729  082A               	movwf	(___aldiv@divisor)
  1113  072A  00F0               
  1114                           	movlw	0
  1115  072B  3000               	movwf	((??_UART_Init+4)+0)
  1116  072C  00AE               	movlw	012h
  1117  072D  3012               	movwf	((??_UART_Init+4)+0+1)
  1118  072E  00AF               	movlw	07Ah
  1119  072F  307A               	movwf	((??_UART_Init+4)+0+2)
  1120  0730  00B0               	movlw	0
  1121  0731  3000               	movwf	((??_UART_Init+4)+0+3)
  1122  0732  00B1               	movf	(UART_Init@baudrate),w
  1123  0733  0826               	movwf	(??_UART_Init+8)+0
  1124  0734  00B2               	movf	(UART_Init@baudrate+1),w
  1125  0735  0827               	movwf	((??_UART_Init+8)+0+1)
  1126  0736  00B3               	movf	(UART_Init@baudrate+2),w
  1127  0737  0828               	movwf	((??_UART_Init+8)+0+2)
  1128  0738  00B4               	movf	(UART_Init@baudrate+3),w
  1129  0739  0829               	movwf	((??_UART_Init+8)+0+3)
  1130  073A  00B5               	movlw	06h
  1131  073B  3006               u325:
  1132  073C                     	clrc
  1133  073C  1003               	rlf	(??_UART_Init+8)+0,f
  1134  073D  0DB2               	rlf	(??_UART_Init+8)+1,f
  1135  073E  0DB3               	rlf	(??_UART_Init+8)+2,f
  1136  073F  0DB4               	rlf	(??_UART_Init+8)+3,f
  1137  0740  0DB5               u320:
  1138  0741                     	addlw	-1
  1139  0741  3EFF               	skipz
  1140  0742  1D03               	goto	u325
  1141  0743  2F3C               	comf	(??_UART_Init+8)+0,f
  1142  0744  09B2               	comf	(??_UART_Init+8)+1,f
  1143  0745  09B3               	comf	(??_UART_Init+8)+2,f
  1144  0746  09B4               	comf	(??_UART_Init+8)+3,f
  1145  0747  09B5               	incf	(??_UART_Init+8)+0,f
  1146  0748  0AB2               	skipnz
  1147  0749  1903               	incf	(??_UART_Init+8)+1,f
  1148  074A  0AB3               	skipnz
  1149  074B  1903               	incf	(??_UART_Init+8)+2,f
  1150  074C  0AB4               	skipnz
  1151  074D  1903               	incf	(??_UART_Init+8)+3,f
  1152  074E  0AB5               	movf	0+(??_UART_Init+8)+0,w
  1153  074F  0832               	addwf	(??_UART_Init+4)+0,f
  1154  0750  07AE               	movf	1+(??_UART_Init+8)+0,w
  1155  0751  0833               	skipnc
  1156  0752  1803               	incfsz	1+(??_UART_Init+8)+0,w
  1157  0753  0F33               	goto	u330
  1158  0754  2F56               	goto	u331
  1159  0755  2F57               u330:
  1160  0756                     	addwf	(??_UART_Init+4)+1,f
  1161  0756  07AF               u331:
  1162  0757                     	movf	2+(??_UART_Init+8)+0,w
  1163  0757  0834               	skipnc
  1164  0758  1803               	incfsz	2+(??_UART_Init+8)+0,w
  1165  0759  0F34               	goto	u332
  1166  075A  2F5C               	goto	u333
  1167  075B  2F5D               u332:
  1168  075C                     	addwf	(??_UART_Init+4)+2,f
  1169  075C  07B0               u333:
  1170  075D                     	movf	3+(??_UART_Init+8)+0,w
  1171  075D  0835               	skipnc
  1172  075E  1803               	incf	3+(??_UART_Init+8)+0,w
  1173  075F  0A35               	addwf	(??_UART_Init+4)+3,f
  1174  0760  07B1               	movf	3+(??_UART_Init+4)+0,w
  1175  0761  0831               	movwf	(___aldiv@dividend+3)
  1176  0762  00F7               	movf	2+(??_UART_Init+4)+0,w
  1177  0763  0830               	movwf	(___aldiv@dividend+2)
  1178  0764  00F6               	movf	1+(??_UART_Init+4)+0,w
  1179  0765  082F               	movwf	(___aldiv@dividend+1)
  1180  0766  00F5               	movf	0+(??_UART_Init+4)+0,w
  1181  0767  082E               	movwf	(___aldiv@dividend)
  1182  0768  00F4               
  1183                           	fcall	___aldiv
  1184  0769  120A  118A  266A  120A  118A  	movf	(1+(?___aldiv)),w
  1185  076E  0871               	movwf	(UART_Init@x+1)
  1186  076F  00FA               	movf	(0+(?___aldiv)),w
  1187  0770  0870               	movwf	(UART_Init@x)
  1188  0771  00F9               	line	21
  1189                           	
  1190                           l768:	
  1191  0772                     ;main.c: 21:         return 1;
  1192                           	movlw	01h
  1193  0772  3001               	subwf	(UART_Init@x+1),w
  1194  0773  027A               	movlw	0
  1195  0774  3000               	skipnz
  1196  0775  1903               	subwf	(UART_Init@x),w
  1197  0776  0279               	skipc
  1198  0777  1C03               	goto	u341
  1199  0778  2F7A               	goto	u340
  1200  0779  2F7B               u341:
  1201  077A                     	goto	l774
  1202  077A  2FE1               u340:
  1203  077B                     	line	22
  1204                           	
  1205                           l770:	
  1206  077B                     ;main.c: 22:     }
  1207                           	bcf	status, 5	;RP0=0, select bank0
  1208  077B  1283               	bcf	status, 6	;RP1=0, select bank0
  1209  077C  1303               	movf	(UART_Init@baudrate),w
  1210  077D  0826               	movwf	(??_UART_Init+0)+0
  1211  077E  00AA               	movf	(UART_Init@baudrate+1),w
  1212  077F  0827               	movwf	((??_UART_Init+0)+0+1)
  1213  0780  00AB               	movf	(UART_Init@baudrate+2),w
  1214  0781  0828               	movwf	((??_UART_Init+0)+0+2)
  1215  0782  00AC               	movf	(UART_Init@baudrate+3),w
  1216  0783  0829               	movwf	((??_UART_Init+0)+0+3)
  1217  0784  00AD               	movlw	04h
  1218  0785  3004               u355:
  1219  0786                     	clrc
  1220  0786  1003               	rlf	(??_UART_Init+0)+0,f
  1221  0787  0DAA               	rlf	(??_UART_Init+0)+1,f
  1222  0788  0DAB               	rlf	(??_UART_Init+0)+2,f
  1223  0789  0DAC               	rlf	(??_UART_Init+0)+3,f
  1224  078A  0DAD               u350:
  1225  078B                     	addlw	-1
  1226  078B  3EFF               	skipz
  1227  078C  1D03               	goto	u355
  1228  078D  2F86               	movf	3+(??_UART_Init+0)+0,w
  1229  078E  082D               	movwf	(___aldiv@divisor+3)
  1230  078F  00F3               	movf	2+(??_UART_Init+0)+0,w
  1231  0790  082C               	movwf	(___aldiv@divisor+2)
  1232  0791  00F2               	movf	1+(??_UART_Init+0)+0,w
  1233  0792  082B               	movwf	(___aldiv@divisor+1)
  1234  0793  00F1               	movf	0+(??_UART_Init+0)+0,w
  1235  0794  082A               	movwf	(___aldiv@divisor)
  1236  0795  00F0               
  1237                           	movlw	0
  1238  0796  3000               	movwf	((??_UART_Init+4)+0)
  1239  0797  00AE               	movlw	012h
  1240  0798  3012               	movwf	((??_UART_Init+4)+0+1)
  1241  0799  00AF               	movlw	07Ah
  1242  079A  307A               	movwf	((??_UART_Init+4)+0+2)
  1243  079B  00B0               	movlw	0
  1244  079C  3000               	movwf	((??_UART_Init+4)+0+3)
  1245  079D  00B1               	movf	(UART_Init@baudrate),w
  1246  079E  0826               	movwf	(??_UART_Init+8)+0
  1247  079F  00B2               	movf	(UART_Init@baudrate+1),w
  1248  07A0  0827               	movwf	((??_UART_Init+8)+0+1)
  1249  07A1  00B3               	movf	(UART_Init@baudrate+2),w
  1250  07A2  0828               	movwf	((??_UART_Init+8)+0+2)
  1251  07A3  00B4               	movf	(UART_Init@baudrate+3),w
  1252  07A4  0829               	movwf	((??_UART_Init+8)+0+3)
  1253  07A5  00B5               	movlw	04h
  1254  07A6  3004               u365:
  1255  07A7                     	clrc
  1256  07A7  1003               	rlf	(??_UART_Init+8)+0,f
  1257  07A8  0DB2               	rlf	(??_UART_Init+8)+1,f
  1258  07A9  0DB3               	rlf	(??_UART_Init+8)+2,f
  1259  07AA  0DB4               	rlf	(??_UART_Init+8)+3,f
  1260  07AB  0DB5               u360:
  1261  07AC                     	addlw	-1
  1262  07AC  3EFF               	skipz
  1263  07AD  1D03               	goto	u365
  1264  07AE  2FA7               	comf	(??_UART_Init+8)+0,f
  1265  07AF  09B2               	comf	(??_UART_Init+8)+1,f
  1266  07B0  09B3               	comf	(??_UART_Init+8)+2,f
  1267  07B1  09B4               	comf	(??_UART_Init+8)+3,f
  1268  07B2  09B5               	incf	(??_UART_Init+8)+0,f
  1269  07B3  0AB2               	skipnz
  1270  07B4  1903               	incf	(??_UART_Init+8)+1,f
  1271  07B5  0AB3               	skipnz
  1272  07B6  1903               	incf	(??_UART_Init+8)+2,f
  1273  07B7  0AB4               	skipnz
  1274  07B8  1903               	incf	(??_UART_Init+8)+3,f
  1275  07B9  0AB5               	movf	0+(??_UART_Init+8)+0,w
  1276  07BA  0832               	addwf	(??_UART_Init+4)+0,f
  1277  07BB  07AE               	movf	1+(??_UART_Init+8)+0,w
  1278  07BC  0833               	skipnc
  1279  07BD  1803               	incfsz	1+(??_UART_Init+8)+0,w
  1280  07BE  0F33               	goto	u370
  1281  07BF  2FC1               	goto	u371
  1282  07C0  2FC2               u370:
  1283  07C1                     	addwf	(??_UART_Init+4)+1,f
  1284  07C1  07AF               u371:
  1285  07C2                     	movf	2+(??_UART_Init+8)+0,w
  1286  07C2  0834               	skipnc
  1287  07C3  1803               	incfsz	2+(??_UART_Init+8)+0,w
  1288  07C4  0F34               	goto	u372
  1289  07C5  2FC7               	goto	u373
  1290  07C6  2FC8               u372:
  1291  07C7                     	addwf	(??_UART_Init+4)+2,f
  1292  07C7  07B0               u373:
  1293  07C8                     	movf	3+(??_UART_Init+8)+0,w
  1294  07C8  0835               	skipnc
  1295  07C9  1803               	incf	3+(??_UART_Init+8)+0,w
  1296  07CA  0A35               	addwf	(??_UART_Init+4)+3,f
  1297  07CB  07B1               	movf	3+(??_UART_Init+4)+0,w
  1298  07CC  0831               	movwf	(___aldiv@dividend+3)
  1299  07CD  00F7               	movf	2+(??_UART_Init+4)+0,w
  1300  07CE  0830               	movwf	(___aldiv@dividend+2)
  1301  07CF  00F6               	movf	1+(??_UART_Init+4)+0,w
  1302  07D0  082F               	movwf	(___aldiv@dividend+1)
  1303  07D1  00F5               	movf	0+(??_UART_Init+4)+0,w
  1304  07D2  082E               	movwf	(___aldiv@dividend)
  1305  07D3  00F4               
  1306                           	fcall	___aldiv
  1307  07D4  120A  118A  266A  120A  118A  	movf	(1+(?___aldiv)),w
  1308  07D9  0871               	movwf	(UART_Init@x+1)
  1309  07DA  00FA               	movf	(0+(?___aldiv)),w
  1310  07DB  0870               	movwf	(UART_Init@x)
  1311  07DC  00F9               	line	23
  1312                           	
  1313                           l772:	
  1314  07DD                     ;main.c: 23:     return 0;
  1315                           	bsf	status, 5	;RP0=1, select bank1
  1316  07DD  1683               	bcf	status, 6	;RP1=0, select bank1
  1317  07DE  1303               	bsf	(1218/8)^080h,(1218)&7	;volatile
  1318  07DF  1518               	goto	l774
  1319  07E0  2FE1               	line	24
  1320                           ;main.c: 24: }
  1321                           	
  1322                           l33:	
  1323  07E1                     	line	26
  1324                           	
  1325                           l774:	
  1326  07E1                     ;main.c: 26: void UART_Write(char data)
  1327                           	movlw	01h
  1328  07E1  3001               	subwf	(UART_Init@x+1),w
  1329  07E2  027A               	movlw	0
  1330  07E3  3000               	skipnz
  1331  07E4  1903               	subwf	(UART_Init@x),w
  1332  07E5  0279               	skipnc
  1333  07E6  1803               	goto	u381
  1334  07E7  2FE9               	goto	u380
  1335  07E8  2FEA               u381:
  1336  07E9                     	goto	l35
  1337  07E9  2FFB               u380:
  1338  07EA                     	line	27
  1339                           	
  1340                           l776:	
  1341  07EA                     ;main.c: 27: {
  1342                           	movf	(UART_Init@x),w
  1343  07EA  0879               	bsf	status, 5	;RP0=1, select bank1
  1344  07EB  1683               	bcf	status, 6	;RP1=0, select bank1
  1345  07EC  1303               	movwf	(153)^080h	;volatile
  1346  07ED  0099               	line	28
  1347                           	
  1348                           l778:	
  1349  07EE                     ;main.c: 28:   while(!TRMT);
  1350                           	bcf	(1220/8)^080h,(1220)&7	;volatile
  1351  07EE  1218               	line	29
  1352                           	
  1353                           l780:	
  1354  07EF                     ;main.c: 29:   TXREG = data;
  1355                           	bcf	status, 5	;RP0=0, select bank0
  1356  07EF  1283               	bcf	status, 6	;RP1=0, select bank0
  1357  07F0  1303               	bsf	(199/8),(199)&7	;volatile
  1358  07F1  1798               	line	30
  1359                           	
  1360                           l782:	
  1361  07F2                     ;main.c: 30: }
  1362                           	bsf	(196/8),(196)&7	;volatile
  1363  07F2  1618               	line	31
  1364                           	
  1365                           l784:	
  1366  07F3                     ;main.c: 31: 
  1367                           	bsf	status, 5	;RP0=1, select bank1
  1368  07F3  1683               	bcf	status, 6	;RP1=0, select bank1
  1369  07F4  1303               	bsf	(1125/8)^080h,(1125)&7	;volatile
  1370  07F5  168C               	line	32
  1371                           	
  1372                           l786:	
  1373  07F6                     ;main.c: 32: void UART_Write_Text(char *text)
  1374                           	bsf	(94/8),(94)&7	;volatile
  1375  07F6  170B               	line	33
  1376                           	
  1377                           l788:	
  1378  07F7                     ;main.c: 33: {
  1379                           	bsf	(95/8),(95)&7	;volatile
  1380  07F7  178B               	line	34
  1381                           	
  1382                           l790:	
  1383  07F8                     ;main.c: 34:   int i;
  1384                           	bsf	(1221/8)^080h,(1221)&7	;volatile
  1385  07F8  1698               	goto	l35
  1386  07F9  2FFB               	line	35
  1387                           	
  1388                           l792:	
  1389  07FA                     ;main.c: 35:   for(i=0;text[i]!='\0';i++);	Return value of _UART_Init is never used
  1390                           	goto	l35
  1391  07FA  2FFB               	line	36
  1392                           ;main.c: 36:     UART_Write(text[i]);
  1393                           	
  1394                           l34:	
  1395  07FB                     	line	38
  1396                           ;main.c: 37: };	Return value of _UART_Init is never used
  1397                           	
  1398                           l35:	
  1399  07FB                     	return
  1400  07FB  0008               	opt stack 0
  1401                           GLOBAL	__end_of_UART_Init
  1402                           	__end_of_UART_Init:
  1403  07FC                     	signat	_UART_Init,4217
  1404                           	global	___aldiv
  1405                           
  1406 ;; *************** function ___aldiv *****************
  1407 ;; Defined at:
  1408 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  divisor         4    0[COMMON] long 
  1411 ;;  dividend        4    4[COMMON] long 
  1412 ;; Auto vars:     Size  Location     Type
  1413 ;;  quotient        4    2[BANK0 ] long 
  1414 ;;  sign            1    1[BANK0 ] unsigned char 
  1415 ;;  counter         1    0[BANK0 ] unsigned char 
  1416 ;; Return value:  Size  Location     Type
  1417 ;;                  4    0[COMMON] long 
  1418 ;; Registers used:
  1419 ;;		wreg, status,2, status,0
  1420 ;; Tracked objects:
  1421 ;;		On entry : 0/0
  1422 ;;		On exit  : 0/0
  1423 ;;		Unchanged: 0/0
  1424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1425 ;;      Params:         8       0       0       0       0
  1426 ;;      Locals:         0       6       0       0       0
  1427 ;;      Temps:          1       0       0       0       0
  1428 ;;      Totals:         9       6       0       0       0
  1429 ;;Total ram usage:       15 bytes
  1430 ;; Hardware stack levels used:    1
  1431 ;; This function calls:
  1432 ;;		Nothing
  1433 ;; This function is called by:
  1434 ;;		_UART_Init
  1435 ;; This function uses a non-reentrant model
  1436 ;;
  1437                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  1438                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1439                           	line	5
  1440                           global __ptext4
  1441                           __ptext4:	;psect for function ___aldiv
  1442  066A                     psect	text4
  1443                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
  1444                           	line	5
  1445                           	global	__size_of___aldiv
  1446                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
  1447  00A6                     	
  1448                           ___aldiv:	
  1449  066A                     ;incstack = 0
  1450                           	opt	stack 6
  1451                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1452                           	line	13
  1453                           	
  1454                           l726:	
  1455  066A                     	bcf	status, 5	;RP0=0, select bank0
  1456  066A  1283               	bcf	status, 6	;RP1=0, select bank0
  1457  066B  1303               	clrf	(___aldiv@sign)
  1458  066C  01A1               	line	14
  1459                           	
  1460                           l728:	
  1461  066D                     	btfss	(___aldiv@divisor+3),7
  1462  066D  1FF3               	goto	u211
  1463  066E  2E70               	goto	u210
  1464  066F  2E71               u211:
  1465  0670                     	goto	l206
  1466  0670  2E7E               u210:
  1467  0671                     	line	15
  1468                           	
  1469                           l730:	
  1470  0671                     	comf	(___aldiv@divisor),f
  1471  0671  09F0               	comf	(___aldiv@divisor+1),f
  1472  0672  09F1               	comf	(___aldiv@divisor+2),f
  1473  0673  09F2               	comf	(___aldiv@divisor+3),f
  1474  0674  09F3               	incf	(___aldiv@divisor),f
  1475  0675  0AF0               	skipnz
  1476  0676  1903               	incf	(___aldiv@divisor+1),f
  1477  0677  0AF1               	skipnz
  1478  0678  1903               	incf	(___aldiv@divisor+2),f
  1479  0679  0AF2               	skipnz
  1480  067A  1903               	incf	(___aldiv@divisor+3),f
  1481  067B  0AF3               	line	16
  1482                           	clrf	(___aldiv@sign)
  1483  067C  01A1               	incf	(___aldiv@sign),f
  1484  067D  0AA1               	line	17
  1485                           	
  1486                           l206:	
  1487  067E                     	line	18
  1488                           	btfss	(___aldiv@dividend+3),7
  1489  067E  1FF7               	goto	u221
  1490  067F  2E81               	goto	u220
  1491  0680  2E82               u221:
  1492  0681                     	goto	l736
  1493  0681  2E92               u220:
  1494  0682                     	line	19
  1495                           	
  1496                           l732:	
  1497  0682                     	comf	(___aldiv@dividend),f
  1498  0682  09F4               	comf	(___aldiv@dividend+1),f
  1499  0683  09F5               	comf	(___aldiv@dividend+2),f
  1500  0684  09F6               	comf	(___aldiv@dividend+3),f
  1501  0685  09F7               	incf	(___aldiv@dividend),f
  1502  0686  0AF4               	skipnz
  1503  0687  1903               	incf	(___aldiv@dividend+1),f
  1504  0688  0AF5               	skipnz
  1505  0689  1903               	incf	(___aldiv@dividend+2),f
  1506  068A  0AF6               	skipnz
  1507  068B  1903               	incf	(___aldiv@dividend+3),f
  1508  068C  0AF7               	line	20
  1509                           	
  1510                           l734:	
  1511  068D                     	movlw	low(01h)
  1512  068D  3001               	movwf	(??___aldiv+0)+0
  1513  068E  00F8               	movf	(??___aldiv+0)+0,w
  1514  068F  0878               	xorwf	(___aldiv@sign),f
  1515  0690  06A1               	goto	l736
  1516  0691  2E92               	line	21
  1517                           	
  1518                           l207:	
  1519  0692                     	line	22
  1520                           	
  1521                           l736:	
  1522  0692                     	movlw	high highword(0)
  1523  0692  3000               	movwf	(___aldiv@quotient+3)
  1524  0693  00A5               	movlw	low highword(0)
  1525  0694  3000               	movwf	(___aldiv@quotient+2)
  1526  0695  00A4               	movlw	high(0)
  1527  0696  3000               	movwf	(___aldiv@quotient+1)
  1528  0697  00A3               	movlw	low(0)
  1529  0698  3000               	movwf	(___aldiv@quotient)
  1530  0699  00A2               
  1531                           	line	23
  1532                           	
  1533                           l738:	
  1534  069A                     	movf	(___aldiv@divisor+3),w
  1535  069A  0873               	iorwf	(___aldiv@divisor+2),w
  1536  069B  0472               	iorwf	(___aldiv@divisor+1),w
  1537  069C  0471               	iorwf	(___aldiv@divisor),w
  1538  069D  0470               	skipnz
  1539  069E  1903               	goto	u231
  1540  069F  2EA1               	goto	u230
  1541  06A0  2EA2               u231:
  1542  06A1                     	goto	l758
  1543  06A1  2EF5               u230:
  1544  06A2                     	line	24
  1545                           	
  1546                           l740:	
  1547  06A2                     	clrf	(___aldiv@counter)
  1548  06A2  01A0               	incf	(___aldiv@counter),f
  1549  06A3  0AA0               	line	25
  1550                           	goto	l744
  1551  06A4  2EB3               	
  1552                           l210:	
  1553  06A5                     	line	26
  1554                           	
  1555                           l742:	
  1556  06A5                     	movlw	01h
  1557  06A5  3001               	movwf	(??___aldiv+0)+0
  1558  06A6  00F8               u245:
  1559  06A7                     	clrc
  1560  06A7  1003               	rlf	(___aldiv@divisor),f
  1561  06A8  0DF0               	rlf	(___aldiv@divisor+1),f
  1562  06A9  0DF1               	rlf	(___aldiv@divisor+2),f
  1563  06AA  0DF2               	rlf	(___aldiv@divisor+3),f
  1564  06AB  0DF3               	decfsz	(??___aldiv+0)+0
  1565  06AC  0BF8               	goto	u245
  1566  06AD  2EA7               	line	27
  1567                           	movlw	low(01h)
  1568  06AE  3001               	movwf	(??___aldiv+0)+0
  1569  06AF  00F8               	movf	(??___aldiv+0)+0,w
  1570  06B0  0878               	addwf	(___aldiv@counter),f
  1571  06B1  07A0               	goto	l744
  1572  06B2  2EB3               	line	28
  1573                           	
  1574                           l209:	
  1575  06B3                     	line	25
  1576                           	
  1577                           l744:	
  1578  06B3                     	btfss	(___aldiv@divisor+3),(31)&7
  1579  06B3  1FF3               	goto	u251
  1580  06B4  2EB6               	goto	u250
  1581  06B5  2EB7               u251:
  1582  06B6                     	goto	l742
  1583  06B6  2EA5               u250:
  1584  06B7                     	goto	l746
  1585  06B7  2EB9               	
  1586                           l211:	
  1587  06B8                     	goto	l746
  1588  06B8  2EB9               	line	29
  1589                           	
  1590                           l212:	
  1591  06B9                     	line	30
  1592                           	
  1593                           l746:	
  1594  06B9                     	movlw	01h
  1595  06B9  3001               	movwf	(??___aldiv+0)+0
  1596  06BA  00F8               u265:
  1597  06BB                     	clrc
  1598  06BB  1003               	rlf	(___aldiv@quotient),f
  1599  06BC  0DA2               	rlf	(___aldiv@quotient+1),f
  1600  06BD  0DA3               	rlf	(___aldiv@quotient+2),f
  1601  06BE  0DA4               	rlf	(___aldiv@quotient+3),f
  1602  06BF  0DA5               	decfsz	(??___aldiv+0)+0
  1603  06C0  0BF8               	goto	u265
  1604  06C1  2EBB               	line	31
  1605                           	
  1606                           l748:	
  1607  06C2                     	movf	(___aldiv@divisor+3),w
  1608  06C2  0873               	subwf	(___aldiv@dividend+3),w
  1609  06C3  0277               	skipz
  1610  06C4  1D03               	goto	u275
  1611  06C5  2ED0               	movf	(___aldiv@divisor+2),w
  1612  06C6  0872               	subwf	(___aldiv@dividend+2),w
  1613  06C7  0276               	skipz
  1614  06C8  1D03               	goto	u275
  1615  06C9  2ED0               	movf	(___aldiv@divisor+1),w
  1616  06CA  0871               	subwf	(___aldiv@dividend+1),w
  1617  06CB  0275               	skipz
  1618  06CC  1D03               	goto	u275
  1619  06CD  2ED0               	movf	(___aldiv@divisor),w
  1620  06CE  0870               	subwf	(___aldiv@dividend),w
  1621  06CF  0274               u275:
  1622  06D0                     	skipc
  1623  06D0  1C03               	goto	u271
  1624  06D1  2ED3               	goto	u270
  1625  06D2  2ED4               u271:
  1626  06D3                     	goto	l754
  1627  06D3  2EE4               u270:
  1628  06D4                     	line	32
  1629                           	
  1630                           l750:	
  1631  06D4                     	movf	(___aldiv@divisor),w
  1632  06D4  0870               	subwf	(___aldiv@dividend),f
  1633  06D5  02F4               	movf	(___aldiv@divisor+1),w
  1634  06D6  0871               	skipc
  1635  06D7  1C03               	incfsz	(___aldiv@divisor+1),w
  1636  06D8  0F71               	subwf	(___aldiv@dividend+1),f
  1637  06D9  02F5               	movf	(___aldiv@divisor+2),w
  1638  06DA  0872               	skipc
  1639  06DB  1C03               	incfsz	(___aldiv@divisor+2),w
  1640  06DC  0F72               	subwf	(___aldiv@dividend+2),f
  1641  06DD  02F6               	movf	(___aldiv@divisor+3),w
  1642  06DE  0873               	skipc
  1643  06DF  1C03               	incfsz	(___aldiv@divisor+3),w
  1644  06E0  0F73               	subwf	(___aldiv@dividend+3),f
  1645  06E1  02F7               	line	33
  1646                           	
  1647                           l752:	
  1648  06E2                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
  1649  06E2  1422               	goto	l754
  1650  06E3  2EE4               	line	34
  1651                           	
  1652                           l213:	
  1653  06E4                     	line	35
  1654                           	
  1655                           l754:	
  1656  06E4                     	movlw	01h
  1657  06E4  3001               u285:
  1658  06E5                     	clrc
  1659  06E5  1003               	rrf	(___aldiv@divisor+3),f
  1660  06E6  0CF3               	rrf	(___aldiv@divisor+2),f
  1661  06E7  0CF2               	rrf	(___aldiv@divisor+1),f
  1662  06E8  0CF1               	rrf	(___aldiv@divisor),f
  1663  06E9  0CF0               	addlw	-1
  1664  06EA  3EFF               	skipz
  1665  06EB  1D03               	goto	u285
  1666  06EC  2EE5               
  1667                           	line	36
  1668                           	
  1669                           l756:	
  1670  06ED                     	movlw	01h
  1671  06ED  3001               	subwf	(___aldiv@counter),f
  1672  06EE  02A0               	btfss	status,2
  1673  06EF  1D03               	goto	u291
  1674  06F0  2EF2               	goto	u290
  1675  06F1  2EF3               u291:
  1676  06F2                     	goto	l746
  1677  06F2  2EB9               u290:
  1678  06F3                     	goto	l758
  1679  06F3  2EF5               	
  1680                           l214:	
  1681  06F4                     	goto	l758
  1682  06F4  2EF5               	line	37
  1683                           	
  1684                           l208:	
  1685  06F5                     	line	38
  1686                           	
  1687                           l758:	
  1688  06F5                     	movf	((___aldiv@sign)),w
  1689  06F5  0821               	btfsc	status,2
  1690  06F6  1903               	goto	u301
  1691  06F7  2EF9               	goto	u300
  1692  06F8  2EFA               u301:
  1693  06F9                     	goto	l762
  1694  06F9  2F06               u300:
  1695  06FA                     	line	39
  1696                           	
  1697                           l760:	
  1698  06FA                     	comf	(___aldiv@quotient),f
  1699  06FA  09A2               	comf	(___aldiv@quotient+1),f
  1700  06FB  09A3               	comf	(___aldiv@quotient+2),f
  1701  06FC  09A4               	comf	(___aldiv@quotient+3),f
  1702  06FD  09A5               	incf	(___aldiv@quotient),f
  1703  06FE  0AA2               	skipnz
  1704  06FF  1903               	incf	(___aldiv@quotient+1),f
  1705  0700  0AA3               	skipnz
  1706  0701  1903               	incf	(___aldiv@quotient+2),f
  1707  0702  0AA4               	skipnz
  1708  0703  1903               	incf	(___aldiv@quotient+3),f
  1709  0704  0AA5               	goto	l762
  1710  0705  2F06               	
  1711                           l215:	
  1712  0706                     	line	40
  1713                           	
  1714                           l762:	
  1715  0706                     	movf	(___aldiv@quotient+3),w
  1716  0706  0825               	movwf	(?___aldiv+3)
  1717  0707  00F3               	movf	(___aldiv@quotient+2),w
  1718  0708  0824               	movwf	(?___aldiv+2)
  1719  0709  00F2               	movf	(___aldiv@quotient+1),w
  1720  070A  0823               	movwf	(?___aldiv+1)
  1721  070B  00F1               	movf	(___aldiv@quotient),w
  1722  070C  0822               	movwf	(?___aldiv)
  1723  070D  00F0               
  1724                           	goto	l216
  1725  070E  2F0F               	
  1726                           l764:	
  1727  070F                     	line	41
  1728                           	
  1729                           l216:	
  1730  070F                     	return
  1731  070F  0008               	opt stack 0
  1732                           GLOBAL	__end_of___aldiv
  1733                           	__end_of___aldiv:
  1734  0710                     	signat	___aldiv,8316
  1735                           global	___latbits
  1736                           ___latbits	equ	2
  1737  0002                     	global	btemp
  1738                           	btemp set 07Eh
  1739  007E                     
  1740                           	DABS	1,126,2	;btemp
  1741                           	global	wtemp0
  1742                           	wtemp0 set btemp+0
  1743  007E                     	end


Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     26      26
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[10]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_UART_Init
    _UART_Write_Text->_UART_Write
    _UART_Init->___aldiv

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     3      4    1007
                                             11 COMMON     3     3      0
                                             22 BANK0      4     0      4
                          _UART_Init
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (1) _UART_Write_Text                                      3     3      0     171
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (2) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4     836
                                              9 COMMON     2     2      0
                                              6 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_Init
     ___aldiv
   _UART_Write_Text
     _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1A      1A       5       32.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Nov 16 16:47:22 2019

                       pc 0002                        l40 05F4                        l33 07E1  
                      l41 05F8                        l34 07FB                        l35 07FB  
                      l44 0611                        l52 0638                        l45 05FD  
                      l53 0666                        l38 05ED                        l46 061F  
                      l54 0667                        l39 05ED                        l47 061F  
                      l55 0667                        u10 05F3                        u11 05F2  
                      fsr 0004                       l210 06A5                       l211 06B8  
                     l212 06B9                       l213 06E4                       l214 06F4  
                     l206 067E                       l215 0706                       l207 0692  
                     l216 070F                       l208 06F5                       l209 06B3  
                     l630 05F4                       l800 0611                       l730 0671  
                     l810 063C                       l802 0620                       l740 06A2  
                     l732 0682                       l628 05EC                       l812 0642  
                     l804 0625                       l750 06D4                       l742 06A5  
                     l734 068D                       l726 066A                       l814 064F  
                     l806 0634                       l760 06FA                       l752 06E2  
                     l744 06B3                       l736 0692                       l728 066D  
                     l816 0652                       l808 0638                       l762 0706  
                     l754 06E4                       l746 06B9                       l738 069A  
                     l770 077B                       l818 0658                       l764 070F  
                     l756 06ED                       l748 06C2                       l780 07EF  
                     l772 07DD                       l758 06F5                       l790 07F8  
                     l782 07F2                       l774 07E1                       l766 0710  
                     l792 07FA                       l784 07F3                       l776 07EA  
                     l768 0772                       l786 07F6                       l778 07EE  
                     l794 05FA                       l788 07F7                       l796 05FD  
                     l798 060A                       _GIE 005F                       u210 0671  
                     u211 0670                       u300 06FA                       u220 0682  
                     u301 06F9                       u221 0681                       u230 06A2  
                     u310 0720                       u231 06A1                       u320 0741  
                     u250 06B7                       u330 0756                       u251 06B6  
                     u331 0757                       u315 071B                       u340 077B  
                     u332 075C                       u245 06A7                       u341 077A  
                     u333 075D                       u325 073C                       u270 06D4  
                     u350 078B                       u271 06D3                       u407 0648  
                     u360 07AC                       u265 06BB                       u417 065E  
                     u290 06F3                       u370 07C1                       u291 06F2  
                     u275 06D0                       u371 07C2                       u355 0786  
                     u380 07EA                       u372 07C7                       u285 06E5  
                     u381 07E9                       u373 07C8                       u365 07A7  
                     u390 061E                       u391 061D                       fsr0 0004  
            __CFG_LVP$OFF 0000                      STR_1 0009                      STR_2 001A  
                    _BRGH 04C2                      _CREN 00C4                      _PEIE 005E  
                    _RCIE 0465                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4                      _main 0620  
                    btemp 007E                      start 0000   __end_of_UART_Write_Text 0620  
         __end_of___aldiv 0710                     ?_main 0036             __CFG_WDTE$OFF 0000  
                   _SPBRG 0099                     _PORTD 0008                     _TRISD 0088  
                   _TXREG 0019               ?_UART_Write 0070        __size_of_UART_Init 00EC  
                   pclath 000A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07FC              __end_of_main 066A  
                  ??_main 007B                    _OSCCON 008F         __end_of_UART_Init 07FC  
     __size_of_UART_Write 000E                 ??___aldiv 0078          ?_UART_Write_Text 0070  
 __end_of__initialization 07FC            __pcstackCOMMON 0070                __pmaintext 0620  
            ??_UART_Write 0070                __stringtab 0003                   ___aldiv 066A  
      __end_of_UART_Write 05F9                   __ptext1 05F9                   __ptext2 05EB  
                 __ptext3 0710                   __ptext4 066A          ___aldiv@dividend 0074  
    end_of_initialization 07FC          ___aldiv@quotient 0022                 _UART_Init 0710  
          UART_Write@data 0070                ?_UART_Init 0026  __size_of_UART_Write_Text 0027  
     start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
           __pcstackBANK0 0020                  ?___aldiv 0070               ??_UART_Init 002A  
               __pstrings 0003                UART_Init@x 0079         ??_UART_Write_Text 0071  
         ___aldiv@divisor 0070           ___aldiv@counter 0020         UART_Init@baudrate 0026  
             __stringbase 0008          __size_of___aldiv 00A6        __end_of__stringtab 0009  
     UART_Write_Text@text 0073             __size_of_main 004A                  main@argc 0036  
                main@argv 0038                 stringcode 0003           _UART_Write_Text 05F9  
                stringdir 0003                  stringtab 0003              ___aldiv@sign 0021  
              _UART_Write 05EB          UART_Write_Text@i 0071  
